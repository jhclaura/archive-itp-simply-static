<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>processing &#8211; ITP Days</title>
	<atom:link href="/tag/processing/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>Very cool days</description>
	<lastBuildDate>Sun, 23 Mar 2014 00:02:40 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.1</generator>

<image>
	<url>/wp-content/uploads/2015/09/cropped-hat-32x32.jpg</url>
	<title>processing &#8211; ITP Days</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Timing and Pacing</title>
		<link>/2014/03/22/timing-and-pacing/</link>
					<comments>/2014/03/22/timing-and-pacing/#comments</comments>
		
		<dc:creator><![CDATA[jhclaura]]></dc:creator>
		<pubDate>Sun, 23 Mar 2014 00:02:40 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Coding for Emotional Impact]]></category>
		<category><![CDATA[Spring 2014]]></category>
		<category><![CDATA[analyze]]></category>
		<category><![CDATA[music]]></category>
		<category><![CDATA[observation]]></category>
		<category><![CDATA[processing]]></category>
		<guid isPermaLink="false">http://www.jhclaura.com/?p=1338</guid>

					<description><![CDATA[For this week&#8217;s subject Timing and Pacing, I chose &#8220;No Safe-House&#8221; in the soundtrack of The Grand Budapest Hotel to decode. &#160; effect I intend to achieve &#8211;&#62; emotion accumulation, cheerful and narrative. notes library I used for camera in 3D &#8211;&#62;  http://mrfeinberg.com/peasycam/#about using PShape to store the tetrahedron I made and set their movements with [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>For this week&#8217;s subject Timing and Pacing, I chose &#8220;<a href="https://play.spotify.com/track/7bPZmJll7J8afrEfjNZ26p?play=true&amp;utm_source=open.spotify.com&amp;utm_medium=open" target="_blank"><strong>No Safe-House</strong></a>&#8221; in the soundtrack of The Grand Budapest Hotel to decode.</p>
<p><a href="http://www.jhclaura.com/wp-content/uploads/2014/03/timing.png"><img loading="lazy" class="alignnone size-full wp-image-1339" alt="timing" src="http://www.jhclaura.com/wp-content/uploads/2014/03/timing.png" width="1000" height="489" /></a></p>
<p>&nbsp;</p>
<p><iframe loading="lazy" src="//player.vimeo.com/video/89797686?byline=0&amp;color=c9ff23" height="637" width="800" allowfullscreen="" frameborder="0"></iframe></p>
<p><span style="font-family: 'Andale Mono', Times; font-size: medium;"><em><strong>effect</strong></em></span> I intend to achieve</p>
<p>&#8211;&gt; emotion accumulation, cheerful and narrative.</p>
<p><span style="font-size: medium;"><span style="font-family: 'Andale Mono', Times;"><strong><em>notes</em></strong></span></span></p>
<ul>
<li>library I used for camera in 3D &#8211;&gt;  http://mrfeinberg.com/peasycam/#about</li>
<li>using PShape to store the tetrahedron I made and set their movements with trigonometry functions, noise, hsl, and <span style="color: #00ccff; font-size: large;"><strong><em><span style="font-family: 'Book Antiqua', Palatino;">hard-coding</span></em></strong></span> frameCount!!!(see how long and tedious my codes are :P)</li>
<li><strong>issues</strong> to work on, since I used frameCount, it&#8217;s different all the time, depending how fast my computer run. need to use <span style="color: #ff6666;"><strong><span style="font-family: 'Courier New', Courier; font-size: medium;">millis()</span></strong></span> next time!</li>
<li>next step will be using library Minim to generate the patterns directly from the analysis of sound file.</li>
</ul>
<p><span style="font-family: 'Andale Mono', Times; font-size: medium;"><strong><em>codes</em></strong> </span></p>
<p><span id="more-1338"></span></p>
<pre class="brush: java; gutter: true">import peasy.test.*;
import peasy.org.apache.commons.math.*;
import peasy.*;
import peasy.org.apache.commons.math.geometry.*;
import ddf.minim.*;

Minim minim;
AudioPlayer player;
PeasyCam cam;

float spin = 0.0;

SinWave sinW1;
SinWave sinW2;  //time=0
CosWave cosW1;
CosWave cosW2;  //time=0;
TanWave tanW1;
TanWave tanW2;  //time=0;

//SinWave sw1;
//SinWave sw2;
//first circle
ArrayList&lt;SinWave&gt; sw1;
ArrayList&lt;SinWave&gt; sw2;
ArrayList&lt;TanWave&gt; tw;
ArrayList&lt;CosWave&gt; cw1;

//second circle
ArrayList&lt;SinWave&gt; sw1b;
ArrayList&lt;SinWave&gt; sw2b;
ArrayList&lt;TanWave&gt; twb;
ArrayList&lt;CosWave&gt; cw1b;

//3rd circle
ArrayList&lt;SinWave&gt; sw1c;
ArrayList&lt;SinWave&gt; sw2c;
ArrayList&lt;TanWave&gt; twc;
ArrayList&lt;CosWave&gt; cw1c;

float frequency = 0.01;
float time1 = PI/2;
float time2 = 0;
float amplitude = 5;
float offset = 0;
float increaseAmp = 0.01;
float increaseBri = 0.01;
float increaseBri2 = 0.01;
float increaseTime = 0.01;
float radiusCircle = 0.0;

float ang;
float posX;
float posY;
float posZ;

float posX2;
float posY2;
float posZ2;

float posCX;
float posCY;

ArrayList&lt;Tetrahedron&gt; triS;
ArrayList&lt;Tetrahedron&gt; triCircleS;
ArrayList&lt;Tetrahedron&gt; triCircle2S;
ArrayList&lt;Tetrahedron&gt; triCircle3S;

float noiseVal;
float noiseScale=0.02;

int octaves;
float falloff;
float time;

boolean increase = true;

int circleNum = 60;
float size;

//Camera
float xmag, ymag = 0;
float newXmag, newYmag = 0; 
float averagePosX = 0;

////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
//////////////////////  SET_UP  ////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
void setup() {
  noCursor();
  noFill();
  //stroke(255);
  size(1000, 800, P3D);
  colorMode(HSB,100);

  //Camera-------------------------------------------------
  //-------------------------------------------------------
  cam = new PeasyCam(this, 0, 0, 0, 1000);
//  cam.setActive(false);
//  cam.setYawRotationMode();

  //audio
  minim = new Minim(this);
  player = minim.loadFile(&quot;No Safe-House.mp3&quot;);
  player.play();

  sinW1 = new SinWave(time1, frequency, amplitude, offset);
  sinW2 = new SinWave(time2, frequency, amplitude, offset);
  cosW1 = new CosWave(time1, frequency, amplitude, offset);
  cosW2 = new CosWave(time2, frequency, amplitude, offset);
  tanW1 = new TanWave(time1, frequency, amplitude, offset);
  tanW2 = new TanWave(time2, frequency, amplitude, offset);

  triS = new ArrayList&lt;Tetrahedron&gt;();
  triCircleS = new ArrayList&lt;Tetrahedron&gt;();
  triCircle2S = new ArrayList&lt;Tetrahedron&gt;();
  triCircle3S = new ArrayList&lt;Tetrahedron&gt;();

  sw1 = new ArrayList&lt;SinWave&gt;();
  sw2 = new ArrayList&lt;SinWave&gt;();
  tw = new ArrayList&lt;TanWave&gt;();
  cw1 = new ArrayList&lt;CosWave&gt;();

  sw1b = new ArrayList&lt;SinWave&gt;();
  sw2b = new ArrayList&lt;SinWave&gt;();
  twb = new ArrayList&lt;TanWave&gt;();
  cw1b = new ArrayList&lt;CosWave&gt;();

  sw1c = new ArrayList&lt;SinWave&gt;();
  sw2c = new ArrayList&lt;SinWave&gt;();
  twc = new ArrayList&lt;TanWave&gt;();
  cw1c = new ArrayList&lt;CosWave&gt;();

  //first circle
  for(int i=0; i&lt;circleNum; i++){
    Tetrahedron t = new Tetrahedron(color((i)*(100/circleNum), 100, 100));

    SinWave x = new SinWave(radians(360/circleNum*i), frequency, amplitude, offset);
    sw1.add(x);
    SinWave y = new SinWave(PI/2+radians(360/circleNum*i), frequency, amplitude, offset);
    sw2.add(y);
    TanWave tt = new TanWave(radians(360/(circleNum*2)*i), frequency, amplitude, offset);
    tw.add(tt);
    CosWave v = new CosWave(radians(180/2*i), 0.1, 0.2, offset);
    cw1.add(v);

    t.update(x.run()*100, v.run()*50, y.run()*100, tt.run()*0.05);
    triCircleS.add(t);
  }

  //spread circle
  int amount = 30;
  for(int j=0; j&lt;amount; j++){
    Tetrahedron tet = new Tetrahedron();
    Tetrahedron t = new Tetrahedron();

    SinWave x2 = new SinWave(radians(360/amount*j), frequency, amplitude, offset);
    sw1b.add(x2);
    SinWave y2 = new SinWave(PI/2+radians(360/amount*j), frequency, amplitude, offset);
    sw2b.add(y2);
    TanWave tt2 = new TanWave(radians(360/(amount*2)*j), frequency, amplitude, offset);
    twb.add(tt2);
    CosWave v2 = new CosWave(radians(180/2*j), 0.1, 0.2, offset);
    cw1b.add(v2);

    SinWave x3 = new SinWave(radians(360/amount*j), frequency, amplitude, offset);
    sw1c.add(x3);
    SinWave y3 = new SinWave(PI/2+radians(360/amount*j), frequency, amplitude, offset);
    sw2c.add(y3);
    TanWave tt3 = new TanWave(radians(360/(amount*2)*j), frequency, amplitude, offset);
    twc.add(tt3);
    CosWave v3 = new CosWave(PI/2+radians(180/2*j), frequency, amplitude, 0);
    cw1c.add(v3);

    tet.update(x2.run()*100, v2.run()*50, y2.run()*100, tt2.run()*0.05);

    t.update(x3.run()*100, v3.run()*50, v3.run()*100, tt3.run()*0.05);

    triCircle2S.add(tet);
    triCircle3S.add(t);
  }

  size=2;

}

////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
///////////////////////  DRAW  /////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
void draw() {
  rotateX(-.2);
  //rotateY(-.2);

  background(255/23);
  //lights();
  noFill();
  //stroke(255);
  //strokeWeight(3);

  //Camera-------------------------------------------------
  //-------------------------------------------------------
//  if(frameCount &lt; 60*20)
//    cam.setYawRotationMode();

  //rotateX(-PI/2);
  noiseDetail(octaves, falloff);

  posX = sinW1.run();
  posY = cosW2.run();
  posZ = cosW1.run();

  posX2 = cosW1.run();
  posY2 = sinW2.run();
  posZ2 = cosW2.run();

  spin = 0.05*tanW1.run();

  //inner circle---------------------------------------------------
  //0:00~0:32------------------------------------------------------
  if(triCircleS.size()&gt;0){    
    //circle
    for(int i=0; i&lt;triCircleS.size(); i++){
      Tetrahedron t = triCircleS.get(i);
      SinWave x = sw1.get(i);
      SinWave y = sw2.get(i);
      TanWave tt = tw.get(i);
      CosWave v = cw1.get(i);

      t.update(x.run()*(70+radiusCircle), v.run()*50, y.run()*(70+radiusCircle), tt.run()*0.05);      

      if(frameCount &gt; 3500) {
       if(frameCount &lt; 3720)
         radiusCircle += 0.002;
       else if(frameCount &lt; 3720+60*2)
         radiusCircle -= 0.002;
      }

      //sizing---------------------------------------------------------
      //0:00~0:32------------------------------------------------------
      if(frameCount &lt; 900) {
        size += 0.00007;
      }
      else if(frameCount &lt; 960) {
        size -= 0.00105;
      }
      else if(frameCount &lt; 1860) {
        size += 0.0001;
      }
      else if(frameCount &lt; 1920) {
        size -= 0.0015;
      }

      if(frameCount &lt; 60*3.5)
          radiusCircle += 0.003;
      else if(frameCount &lt; 60*8)
        radiusCircle -= 0.003;
      else if(frameCount &lt; 60*11)
        radiusCircle += 0.002;
      else if(frameCount &lt; 60*12)
        radiusCircle -= 0.003;        
      else if(frameCount &lt; 60*16)
        radiusCircle += 0.002;

      else if(frameCount &lt; 60*20)
        radiusCircle -= 0.003;
      else if(frameCount &lt; 60*24)
        radiusCircle += 0.002;
      else if(frameCount &lt; 60*27)
        radiusCircle -= 0.003;
      else if(frameCount &lt; 60*28)
        radiusCircle += 0.003;        
      else if(frameCount &lt; 60*32.5)
        radiusCircle -= 0.002;

      else if(frameCount &lt; 60*36)
        radiusCircle += 0.003;
      else if(frameCount &lt; 60*40)
        radiusCircle -= 0.003;
      else if(frameCount &lt; 60*42)
        radiusCircle += 0.003;
      else if(frameCount &lt; 60*44)
        radiusCircle -= 0.003;
      else if(frameCount &lt; 60*48)
        radiusCircle += 0.003;

      //Up &amp; Down------------------------------------------------------
      //0:46~------------------------------------------------------
      if(frameCount &gt; 2800 &amp;&amp; frameCount &lt; 2900){   // &amp;&amp; frameCount &lt; 3900
        if(size&gt;0)
          size -= 0.0005;
      }
      if(frameCount &gt; 2900 &amp;&amp; frameCount &lt; 3000)
        size += 0.0005;

      if (frameCount == 2900)
        v.setTime(radians(180*i));
      if (frameCount &gt; 2850 &amp;&amp; frameCount &lt; 3300) {
        if(v.frequency&gt;0.06)
          v.frequency -= 0.001;
      } 

      //Up &amp; Down_speedUp----------------------------------------------
      //0:58~0:70------------------------------------------------------
      else if (frameCount &gt; 3500 &amp;&amp; frameCount &lt; 4200) {
        v.frequency += 0.0005;
      }

      println(v.frequency);

      t.setSize(size);

      t.display();
    }
  }

  //spread---------------------------------------------------------
  //0:32~0:47------------------------------------------------------
  if(frameCount &gt; 1920){
    pushStyle();
    if(frameCount &lt; 4530)
      stroke(100*53/359, 100, increaseBri);      
    else {
      if(frameCount % 60 &lt; 30)
        stroke(100*184/359, 89, 100);
      else
        stroke(100*331/359, 100, 100);
    }
    for(int i=0; i&lt;triCircle2S.size(); i++){
      Tetrahedron tet = triCircle2S.get(i);
      SinWave x2 = sw1b.get(i);
      SinWave y2 = sw2b.get(i);
      TanWave tt2 = twb.get(i);
      CosWave v2 = cw1b.get(i);

      x2.setAmp(amplitude+increaseAmp);
      y2.setAmp(amplitude+increaseAmp);

      if(frameCount &lt; 1920+60)
        increaseAmp +=0.0005;
      else if(frameCount &lt; 1920+60*2)
        increaseAmp -=0.0005;
      else if(frameCount &lt; 1920+60*3)
        increaseAmp +=0.0005;
      else if(frameCount &lt; 1920+60*4)
        increaseAmp -=0.0005;
      else if(frameCount &lt; 1920+60*5)
        increaseAmp +=0.0005;
      else if(frameCount &lt; 1920+60*6)
        increaseAmp -=0.0005;
      else if(frameCount &lt; 1920+60*7)
        increaseAmp +=0.0005;
      else if(frameCount &lt; 1920+60*8)
        increaseAmp -=0.0005;
      else if(frameCount &lt; 1920+60*9)
        increaseAmp +=0.0005;
      else if(frameCount &lt; 1920+60*10)
        increaseAmp -=0.0005;
      else if(frameCount &lt; 1920+60*11)
        increaseAmp +=0.0005;
      else if(frameCount &lt; 1920+60*12)
        increaseAmp -=0.0005;
      else if(frameCount &lt; 1920+60*13)
        increaseAmp +=0.0005;
      else if(frameCount &lt; 1920+60*14)
        increaseAmp -=0.0005;

      if(frameCount &gt; 60*75.5 &amp;&amp; frameCount &lt; 60*77.1)   // &amp;&amp; frameCount &lt; 3900
        v2.amplitude -= 0.05;

      tet.update(x2.run()*100, v2.run()*(50+increaseAmp)+50, y2.run()*100, tt2.run()*0.05);
      tet.display();
    }
    popStyle();
    increaseBri += 0.8;
  }

  //another spread-------------------------------------------------
  //------------------------------------------------------
  if(frameCount &gt; 60*61){
    pushStyle();

    stroke((int)random(100)*100/359,100,100);

    for(int i=0; i&lt;triCircle3S.size(); i++){
      Tetrahedron ttt = triCircle3S.get(i);
      ttt.setSize(1);

      if(frameCount &lt; 60*70) {
        if(frameCount % 30 == 0){
          ttt.setSize(random(2));
          strokeWeight(random(1,5));
        }
      } else if(frameCount &lt; 60*77) {
        if(frameCount % 30 == 0){
          ttt.setSize(random(2,5));
          strokeWeight(random(3,7));
        }
      }

      SinWave x3 = sw1c.get(i);
      SinWave y3 = sw2c.get(i);
      TanWave tt3 = twc.get(i);
      CosWave v3 = cw1c.get(i);

      ttt.update(x3.run()*100, y3.run()*50, v3.run()*100, tt3.run()*0.05);
      ttt.display();
    }
    popStyle();
  }

  //auto create flying ones
  if(frameCount &gt; 60*16 &amp;&amp; frameCount &lt; 60*46){
    if(frameCount % (60*4) &lt; (60*1)) {
      if(frameCount % 10 ==0)
        newTri();
    }

  }

  if(frameCount &gt; 60*55 &amp;&amp; frameCount &lt; 60*60) {
    octaves += 0.1;
    falloff += 0.007;
  }

  if(triS.size()&gt;0){
    pushStyle();

    //flying around
    color triC = color(50, 70, increaseBri2);

    int direction = 1;

    //appear
    if(frameCount &gt; 60*10) {
      if(increaseBri2 &lt; 50) {
        increaseBri2 += 0.1*direction;

      }
    } else if (frameCount &gt; 60*77) {
      if(increaseBri2 &lt; 100) {
        increaseBri2 += 0.1*direction;

      }
    }

    for(int i=0; i&lt;triS.size(); i++){
      Tetrahedron t = triS.get(i);

      if(frameCount &lt; 60*61)
        t.setSize(size/2);
      else if(frameCount &lt; 60*70) {
        if(frameCount % 30 == 15){
          t.setSize(random(2));
          strokeWeight(random(1,5));
        }
      } else if(frameCount &lt; 60*77) {
        if(frameCount % 30 == 15){
          t.setSize(random(2,5));
          strokeWeight(random(3,7));
        }
        triC = color(random(1,100), 70, increaseBri2);

      } else if(frameCount &lt; 60*86) {
        t.setSize(random(2));
        triC = color(random(1,100), 70, increaseBri2);
      } else {
        t.setSize(random(100,500));
        triC = color(random(1,100), 70, 100);
      }

      t.setAngle(radians(i*10));

      if(i%2 == 0)
        t.update(t.x+posX, t.y+posY, t.z+(noise(time)*posZ), spin);
      else
        t.update(t.x+posX2, t.y+posY2, t.z+(noise(time)*posZ2), spin);

      t.display( triC );      
    }    
    popStyle();
  }
}

void newTri(){

  Tetrahedron t = new Tetrahedron();
  triS.add(t);
}

void mousePressed(){

  newTri();
}

void keyPressed() {

  switch(keyCode) {
  case UP:
    octaves++;
    break;
  case DOWN:
    octaves--;
    break;
  case RIGHT:
    falloff+=.1;
    break;
  case LEFT:
    falloff-=.1;
    break;
  }

  octaves = constrain(octaves, 0, 25);
  falloff = constrain(falloff, 0.0, 1.1);
}</pre>
<pre class="brush: java; gutter: true">class Tetrahedron {

  PShape t;
  PShape t1, t2, t3, t4;

  float x, y, z;
  float scale = 5;
  float angleY;

  color c;

  Tetrahedron() {
    //c = color(0,0,100);

    t = createShape(GROUP);

    t1 = createShape();
    t1.beginShape();
    t1.stroke(c);
    t1.vertex(-3, 0, 0);
    t1.vertex(3, 0, 0);
    t1.vertex(0, 0, -4);
    t1.endShape(CLOSE);

    t2 = createShape();
    t2.beginShape();
    t2.stroke(c);
    t2.vertex(-3, 0, 0);
    t2.vertex(0, 4, -1.7);
    t2.vertex(3, 0, 0);
    t2.endShape(CLOSE);

    t3 = createShape();
    t3.beginShape();
    t3.stroke(c);
    t3.vertex(3, 0, 0);
    t3.vertex(0, 4, -1.7);
    t3.vertex(0, 0, -4);
    t3.endShape(CLOSE);

    t4 = createShape();
    t4.beginShape();
    t4.stroke(c);
    t4.vertex(-3, 0, 0);
    t4.vertex(0, 0, -4);
    t4.vertex(0, 4, -1.7);
    t4.endShape(CLOSE);

    t.addChild(t1);
    t.addChild(t2);
    t.addChild(t3);
    t.addChild(t4);

    x = random(-200, 200);
    y = random(-200, 200);
    z = random(-200,200);

    t.disableStyle();
    t1.disableStyle();
    t2.disableStyle();
    t3.disableStyle();
    t4.disableStyle();
  }

  Tetrahedron(color _c) {
    c = _c;

    t = createShape(GROUP);

    t1 = createShape();
    t1.beginShape();
    t1.stroke(c);
    t1.vertex(-3, 0, 0);
    t1.vertex(3, 0, 0);
    t1.vertex(0, 0, -4);
    t1.endShape(CLOSE);

    t2 = createShape();
    t2.beginShape();
    t2.stroke(c);
    t2.vertex(-3, 0, 0);
    t2.vertex(0, 4, -1.7);
    t2.vertex(3, 0, 0);
    t2.endShape(CLOSE);

    t3 = createShape();
    t3.beginShape();
    t3.stroke(c);
    t3.vertex(3, 0, 0);
    t3.vertex(0, 4, -1.7);
    t3.vertex(0, 0, -4);
    t3.endShape(CLOSE);

    t4 = createShape();
    t4.beginShape();
    t4.stroke(c);
    t4.vertex(-3, 0, 0);
    t4.vertex(0, 0, -4);
    t4.vertex(0, 4, -1.7);
    t4.endShape(CLOSE);

    t.addChild(t1);
    t.addChild(t2);
    t.addChild(t3);
    t.addChild(t4);

    x = random(-200, 200);
    y = random(-200, 200);
    z = random(-200,200);

  }

  void update(float _x, float _y, float _z) {
    x = _x;
    y = _y;
    z = _z;
  }

  void update(float _x, float _y, float _z, float _angleY) {
    x = _x;
    y = _y;
    z = _z;
    angleY = _angleY;
  }

  void update(float _x, float _y, float _z, color _c) {
    x = _x;
    y = _y;
    z = _z;
    c = _c;
  }

  void update(float _x, float _y, float _z, color _c, float _angleY) {
    x = _x;
    y = _y;
    z = _z;
    c = _c;
    angleY = _angleY;
  }

  void setZ(float _z) {
    z = _z;
  }

  void setAngle(float _angleY) {
    angleY = _angleY;
  }

  void setSize(float _scale) {
    scale = _scale;
  }

  void display() {
    pushMatrix();    

    translate(x, y, z);
    rotateY(angleY);
    rotateZ(angleY);
    scale(scale);

    shape(t);
    popMatrix();
  }

  void display(color _color) {
    pushMatrix();    
    pushStyle();

    fill(_color);
    noStroke();

    translate(x, y, z);
    rotateY(angleY);
    rotateZ(angleY);
    scale(scale);

    shape(t);

    popStyle();
    popMatrix();
  }
}

class Wave{

  float time, frequency, amplitude, offset;

  Wave(float _time, float _frequency, float _amplitude, float _offset){
    time = _time;
    frequency = _frequency;
    amplitude = _amplitude;
    offset = _offset;
  }

  float run(){
    time += frequency;
    return sin( time ) * amplitude + offset;
  }

  void setAmp(float _amp){
    amplitude = _amp;
  }

  void setTime(float _ti){
    time = _ti;
  }

}

class SinWave {
  float time, frequency, amplitude, offset;

  SinWave(float _time, float _frequency, float _amplitude, float _offset){
    time = _time;
    frequency = _frequency;
    amplitude = _amplitude;
    offset = _offset;
  }

  float run() {
    time += frequency;
    return sin( time ) * amplitude + offset;
  }

  void setAmp(float _amp){
    amplitude = _amp;
  }

  void setTime(float _ti){
    time = _ti;
  }
}

class CosWave{
  float time, frequency, amplitude, offset;

  CosWave(float _time, float _frequency, float _amplitude, float _offset){
    time = _time;
    frequency = _frequency;
    amplitude = _amplitude;
    offset = _offset;
  }

  float run() {
    time += frequency;
    return cos( time ) * amplitude + offset;
  }

  void setAmp(float _amp){
    amplitude = _amp;
  }

  void setTime(float _ti){
    time = _ti;
  }

}

class TanWave {
  float time, frequency, amplitude, offset;

  TanWave(float _time, float _frequency, float _amplitude, float _offset){
    time = _time;
    frequency = _frequency;
    amplitude = _amplitude;
    offset = _offset;
  }

  float run() {
    time += frequency;
    return tan( time ) * amplitude + offset;
  }

  void setAmp(float _amp){
    amplitude = _amp;
  }

  void setTime(float _ti){
    time = _ti;
  }

}</pre>
]]></content:encoded>
					
					<wfw:commentRss>/2014/03/22/timing-and-pacing/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>Noise3D</title>
		<link>/2014/03/10/noise3d/</link>
					<comments>/2014/03/10/noise3d/#respond</comments>
		
		<dc:creator><![CDATA[jhclaura]]></dc:creator>
		<pubDate>Mon, 10 Mar 2014 21:25:50 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Coding for Emotional Impact]]></category>
		<category><![CDATA[Spring 2014]]></category>
		<category><![CDATA[3D]]></category>
		<category><![CDATA[abstract]]></category>
		<category><![CDATA[cos]]></category>
		<category><![CDATA[noise]]></category>
		<category><![CDATA[processing]]></category>
		<category><![CDATA[sin]]></category>
		<category><![CDATA[tan]]></category>
		<category><![CDATA[tetrahedron]]></category>
		<guid isPermaLink="false">http://www.jhclaura.com/?p=1335</guid>

					<description><![CDATA[Processing first 3D attempt, using sin, cos, tan and noiseDetail(octaves, fallOff) to control the movement and spinning. No physical interaction, but just single objects follow their individual pathes. Codes float spin = 0.0; SinWave sinW1; SinWave sinW2; //time=0 CosWave cosW1; CosWave cosW2; //time=0; TanWave tanW1; TanWave tanW2; //time=0; float frequency = 0.01; float time1 = [&#8230;]]]></description>
										<content:encoded><![CDATA[<p><iframe loading="lazy" src="//player.vimeo.com/video/88677041?byline=0&amp;color=c9ff23" height="637" width="800" allowfullscreen="" frameborder="0"></iframe></p>
<p>Processing first 3D attempt, using sin, cos, tan and noiseDetail(octaves, fallOff) to control the movement and spinning. No physical interaction, but just single objects follow their individual pathes.</p>
<p><span style="font-family: 'Andale Mono', Times; font-size: medium;"><em><strong>Codes</strong></em></span></p>
<p><span id="more-1335"></span></p>
<pre class="brush: java; gutter: true">float spin = 0.0;

SinWave sinW1;
SinWave sinW2;  //time=0
CosWave cosW1;
CosWave cosW2;  //time=0;
TanWave tanW1;
TanWave tanW2;  //time=0;

float frequency = 0.01;
float time1 = PI/2;
float time2 = 0;
float amplitude = 10;
float offset = 0;

float ang;
float posX;
float posY;
float posZ;

float posX2;
float posY2;
float posZ2;

ArrayList&lt;Tetrahedron&gt; triS;

float noiseVal;
float noiseScale=0.02;

int octaves;
float falloff;
float time;

//Camera
float xmag, ymag = 0;
float newXmag, newYmag = 0; 
float averagePosX = 0;

void setup() {
  noCursor();

  size(1000, 800, P3D);
  sinW1 = new SinWave(time1, frequency, amplitude, offset);
  sinW2 = new SinWave(time2, frequency, amplitude, offset);
  cosW1 = new CosWave(time1, frequency, amplitude, offset);
  cosW2 = new CosWave(time2, frequency, amplitude, offset);
  tanW1 = new TanWave(time1, frequency, amplitude, offset);
  tanW2 = new TanWave(time2, frequency, amplitude, offset);

  triS = new ArrayList&lt;Tetrahedron&gt;();
}

void draw() {
  background(255/23);
  //lights();
  noFill();
  stroke(255);
  strokeWeight(3);
//
  rotateX(-PI/2);
  noiseDetail(octaves, falloff);

//  camera(width/2.0, height/2.0, (height/2.0)/tan(PI*30.0 / 180.0), 
//         width/2.0, height/2.0, 0, 
//         0, 1, 0);

  posX = sinW1.run();
  posY = cosW2.run();
  posZ = cosW1.run();

  posX2 = cosW1.run();
  posY2 = sinW2.run();
  posZ2 = cosW2.run();

  spin = 0.05*tanW1.run();

  if(triS.size()&gt;0){
    //averagePosX = 0;
    for(int i=0; i&lt;triS.size(); i++){
      Tetrahedron t = triS.get(i);

      if(i%2 == 0)
        t.update(t.x+posX, t.y+posY, t.z+(noise(time)*posZ), spin);
      else
        t.update(t.x+posX2, t.y+posY2, t.z+(noise(time)*posZ2), spin);

      t.display();

    }
  }

  // show frame rate
  pushMatrix();
  pushStyle();
  fill(255);
  textSize(13);
  rotateX(PI/2);
  text(int(frameRate), 30, 30);
  text(&quot;mouseClick to generate tetrahedrons&quot;, 30, 50);
  text(&quot;NOISE: up to increase Octaves, right to increase FallOff&quot;, 30, 70);
  popStyle();
  popMatrix();

}

void mousePressed(){

  newTri();

}

void newTri(){

  Tetrahedron t = new Tetrahedron();
  triS.add(t);

}

void keyPressed() {

  switch(keyCode) {
  case UP:
    octaves++;
    break;
  case DOWN:
    octaves--;
    break;
  case RIGHT:
    falloff+=.1;
    break;
  case LEFT:
    falloff-=.1;
    break;
  }

  octaves = constrain(octaves, 1, 25);
  falloff = constrain(falloff, 0.01, 1.05);

  println(&quot;OCTAVES: &quot; + octaves + &quot;ttFALLOFF: &quot; + falloff);
}

class Tetrahedron {

  PShape t;
  PShape t1, t2, t3, t4;

  float x, y, z;
  float scale=5;
  float angleY;

  Tetrahedron() {
    t = createShape(GROUP);

    t1 = createShape();
    t1.beginShape();
    t1.vertex(-3, 0, 0);
    t1.vertex(3, 0, 0);
    t1.vertex(0, 0, -4);
    t1.endShape(CLOSE);

    t2 = createShape();
    t2.beginShape();
    t2.vertex(-3, 0, 0);
    t2.vertex(0, 4, -1.7);
    t2.vertex(3, 0, 0);
    t2.endShape(CLOSE);

    t3 = createShape();
    t3.beginShape();
    t3.vertex(3, 0, 0);
    t3.vertex(0, 4, -1.7);
    t3.vertex(0, 0, -4);
    t3.endShape(CLOSE);

    t4 = createShape();
    t4.beginShape();
    t4.vertex(-3, 0, 0);
    t4.vertex(0, 0, -4);
    t4.vertex(0, 4, -1.7);
    t4.endShape(CLOSE);

    t.addChild(t1);
    t.addChild(t2);
    t.addChild(t3);
    t.addChild(t4);

    x = random(width/2-200, width/2+200);
    y = random(height/2-200, height/2+200);
    z = random(-200,200);
  }

  void update(float _x, float _y, float _z) {
    x = _x;
    y = _y;
    z = _z;
  }

  void update(float _x, float _y, float _z, float _angleY) {
    x = _x;
    y = _y;
    z = _z;
    angleY = _angleY;
  }

  void setZ(float _z) {
    z = _z;
  }

  void setAngle(float _angleY) {
    angleY = _angleY;
  }

  void display() {
    pushMatrix();

    translate(x, y, z);
    rotateY(angleY);
    scale(scale);

    shape(t);
    popMatrix();
  }
}

class Wave{

  float time, frequency, amplitude, offset;

  Wave(float _time, float _frequency, float _amplitude, float _offset){
    time = _time;
    frequency = _frequency;
    amplitude = _amplitude;
    offset = _offset;
  }

  float run(){
    time += frequency;
    return sin( time ) * amplitude + offset;
  }

}

class SinWave {
  float time, frequency, amplitude, offset;

  SinWave(float _time, float _frequency, float _amplitude, float _offset){
    time = _time;
    frequency = _frequency;
    amplitude = _amplitude;
    offset = _offset;
  }

  float run() {
    time += frequency;
    return sin( time ) * amplitude + offset;
  }

}

class CosWave{
  float time, frequency, amplitude, offset;

  CosWave(float _time, float _frequency, float _amplitude, float _offset){
    time = _time;
    frequency = _frequency;
    amplitude = _amplitude;
    offset = _offset;
  }

  float run() {
    time += frequency;
    return cos( time ) * amplitude + offset;
  }

}

class TanWave {
  float time, frequency, amplitude, offset;

  TanWave(float _time, float _frequency, float _amplitude, float _offset){
    time = _time;
    frequency = _frequency;
    amplitude = _amplitude;
    offset = _offset;
  }

  float run() {
    time += frequency;
    return tan( time ) * amplitude + offset;
  }

}</pre>
]]></content:encoded>
					
					<wfw:commentRss>/2014/03/10/noise3d/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>tweaking mini_arc of Mimi</title>
		<link>/2014/02/23/tweaking-mini_arc-of-mimi/</link>
					<comments>/2014/02/23/tweaking-mini_arc-of-mimi/#respond</comments>
		
		<dc:creator><![CDATA[jhclaura]]></dc:creator>
		<pubDate>Mon, 24 Feb 2014 04:25:16 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Coding for Emotional Impact]]></category>
		<category><![CDATA[Spring 2014]]></category>
		<category><![CDATA[processing]]></category>
		<guid isPermaLink="false">http://www.jhclaura.com/?p=1130</guid>

					<description><![CDATA[Tweaking Mimi&#8217;s codes(go to youtube page to link to the amazing original codes of Mimi)! &#8211;&#62; the image of cat makes me laugh and realize the relationship of it with curve above better. &#160; &#8211;&#62; Feeling calm and a little be enchanted, just staring it to finish the pattern you expect in mind. &#160; &#8211;&#62; [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Tweaking Mimi&#8217;s codes(go to youtube page to link to the amazing original codes of Mimi)!</p>
<p><iframe loading="lazy" src="//www.youtube.com/embed/GY45TG3tJ-s?rel=0" height="360" width="640" allowfullscreen="" frameborder="0"></iframe></p>
<p>&#8211;&gt; the image of cat makes me laugh and realize the relationship of it with curve above better.</p>
<p>&nbsp;</p>
<p><iframe loading="lazy" src="//www.youtube.com/embed/wXjUHDy5EVc?rel=0" height="480" width="640" allowfullscreen="" frameborder="0"></iframe></p>
<p>&#8211;&gt; Feeling calm and a little be enchanted, just staring it to finish the pattern you expect in mind.</p>
<p>&nbsp;</p>
<p><iframe loading="lazy" src="//www.youtube.com/embed/LPcusjZ9nUA?rel=0" height="360" width="640" allowfullscreen="" frameborder="0"></iframe></p>
<p>&#8211;&gt; the change of speed, size, and color makes this feeling-soft-at-the-first-glance video more lively.</p>
<p>&nbsp;</p>
<p>And I chose to watch the Cat footage for 10s, 30s, 2 minutes, 5 minutes, and 10 minutes&#8230;.. what do I feel? <strong>NAUSEOUS</strong>. Apparently. It starts as interesting and fun, but after long time staring it, it became boring and made me dizzy.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2014/02/23/tweaking-mini_arc-of-mimi/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>emotion visualization {Tranquil}</title>
		<link>/2014/02/09/emotion-visualization-tranquil/</link>
					<comments>/2014/02/09/emotion-visualization-tranquil/#respond</comments>
		
		<dc:creator><![CDATA[jhclaura]]></dc:creator>
		<pubDate>Sun, 09 Feb 2014 15:50:55 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Coding for Emotional Impact]]></category>
		<category><![CDATA[Spring 2014]]></category>
		<category><![CDATA[mood]]></category>
		<category><![CDATA[processing]]></category>
		<category><![CDATA[story]]></category>
		<guid isPermaLink="false">http://www.jhclaura.com/?p=971</guid>

					<description><![CDATA[Before I start, let me document one thing first&#8230; I FORGOT the format of Processing. Proof as below. And also, I found a music video programming in Openframeworks. Pure Astonishing. &#160; OK. Let&#8217;s begin. {Tranquil} For creating 3 studies of the emotion with ratios of space, rations of color, and ratios of time, I got Tranquil from [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Before I start, let me document one thing first&#8230; <strong>I FORGOT the format of Processing.</strong> Proof as below.</p>
<p><img loading="lazy" class="alignnone  wp-image-974" alt="Screen Shot 2014-02-07 at 7.41.33 PM" src="http://www.jhclaura.com/wp-content/uploads/2014/02/Screen-Shot-2014-02-07-at-7.41.33-PM.png" width="280" height="335" /></p>
<p>And also, I found a music video programming in Openframeworks. Pure Astonishing.</p>
<p><iframe loading="lazy" src="//player.vimeo.com/video/13247004?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff" height="450" width="800" allowfullscreen="" frameborder="0"></iframe></p>
<p>&nbsp;</p>
<p>OK. Let&#8217;s begin.</p>
<h1>{Tranquil}</h1>
<p>For <em>creating 3 studies of the emotion with ratios of space, rations of color, and ratios of time</em>, I got <span style="color: #33cccc;">Tranquil</span> from Kate, and l first pictured the situation I&#8217;ll have this feeling in, and then tried to convey them through coding.</p>
<pre>&lt;em&gt;Situation&lt;/em&gt;: sparkling dust floating in dark, hair floating with wind, immerse in music in crowd environment, look into sky, unfocus eyesight, repeat pattern</pre>
<p><strong>Study 1</strong>: calm(look into sky, unfocus eyesight, <span style="text-decoration: underline;">repeat pattern</span>)</p>
<p><iframe loading="lazy" src="http://www.openprocessing.org/sketch/132760/embed/?width=500&amp;height=500&amp;border=true" height="580" width="528" frameborder="0" scrolling="no"></iframe></p>
<p><strong>Study 2</strong>: free from disturbance(<span style="text-decoration: underline;">immerse in music in crowd environment</span>)</p>
<p><iframe loading="lazy" src="http://www.openprocessing.org/sketch/132763/embed/?width=500&amp;height=500&amp;border=true" height="580" width="528" frameborder="0" scrolling="no"></iframe></p>
<p><strong>Study 3</strong>: free(<span style="text-decoration: underline;">sparkling dust floating in dark</span>, hair floating with wind)</p>
<p><iframe loading="lazy" src="http://www.openprocessing.org/sketch/132762/embed/?width=500&amp;height=500&amp;border=true" height="580" width="528" frameborder="0" scrolling="no"></iframe></p>
]]></content:encoded>
					
					<wfw:commentRss>/2014/02/09/emotion-visualization-tranquil/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Triangulation!</title>
		<link>/2014/01/16/triangulation/</link>
					<comments>/2014/01/16/triangulation/#comments</comments>
		
		<dc:creator><![CDATA[jhclaura]]></dc:creator>
		<pubDate>Thu, 16 Jan 2014 16:06:22 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[ICM_Processing]]></category>
		<category><![CDATA[ohyay]]></category>
		<category><![CDATA[processing]]></category>
		<category><![CDATA[toxiclibs]]></category>
		<category><![CDATA[triangulation]]></category>
		<category><![CDATA[video]]></category>
		<guid isPermaLink="false">http://www.jhclaura.com/?p=677</guid>

					<description><![CDATA[Triangulation.. Finally! Want it so bad for a semester. Luckily having a winter break to do it. Have a lot of rooms for improvement but still, one step further! *UPDATE*(in the middle of writing this post UGH) New version. Normal speed! In the middle of documentation, the ill performance, both low speed running and wrong color [&#8230;]]]></description>
										<content:encoded><![CDATA[<p style="font-family: HelveticaNeue, Arial, 'Helvetica Neue', Helvetica, FreeSans, 'Liberation Sans', 'Nimbus Sans L', sans-serif; font-style: normal;">Triangulation.. Finally! Want it so bad for a semester. Luckily having a winter break to do it. Have a lot of rooms for improvement but still, one step further!</p>
<h3 style="font-family: HelveticaNeue, Arial, 'Helvetica Neue', Helvetica, FreeSans, 'Liberation Sans', 'Nimbus Sans L', sans-serif; font-style: normal;"><span style="color: #ff3366;">*UPDATE*(in the middle of writing this post UGH)</span></h3>
<p style="font-family: HelveticaNeue, Arial, 'Helvetica Neue', Helvetica, FreeSans, 'Liberation Sans', 'Nimbus Sans L', sans-serif; font-size: 14px; font-style: normal; font-variant: normal; line-height: 21px;"><strong>New version.</strong> Normal speed!</p>
<p style="font-family: HelveticaNeue, Arial, 'Helvetica Neue', Helvetica, FreeSans, 'Liberation Sans', 'Nimbus Sans L', sans-serif; font-size: 14px; font-style: normal; font-variant: normal; line-height: 21px;"><iframe loading="lazy" src="//player.vimeo.com/video/84282840?color=c9ff23" height="585" width="800" allowfullscreen="" frameborder="0"></iframe></p>
<p style="font-family: HelveticaNeue, Arial, 'Helvetica Neue', Helvetica, FreeSans, 'Liberation Sans', 'Nimbus Sans L', sans-serif; font-size: 14px; font-style: normal; font-variant: normal; line-height: 21px;">In the middle of documentation, the ill performance, both low speed running and wrong color picking bothered me a lot, so I went through the whole codes again and making adjustment around. And then I found out what the problem is! It&#8217;s the <span style="text-decoration: underline; color: #17e8be;"><strong>random plotting of points</strong></span> for triangles! It not only slows down the process, but also causes the ill performance of choosing the right color for the triangle. OH YEAH SO HAPPY. It&#8217;s the similar &#8220;bitter yet sweet moment&#8221; I usually will have when coding&#8230; I think I&#8217;m ready for the new semester!</p>
<p style="font-family: HelveticaNeue, Arial, 'Helvetica Neue', Helvetica, FreeSans, 'Liberation Sans', 'Nimbus Sans L', sans-serif; font-size: 14px; font-style: normal; font-variant: normal; line-height: 21px;"><strong>Old version.</strong> x3 speed! Slow and chaos.</p>
<p style="font-family: HelveticaNeue, Arial, 'Helvetica Neue', Helvetica, FreeSans, 'Liberation Sans', 'Nimbus Sans L', sans-serif; font-size: 14px; font-style: normal; font-variant: normal; line-height: 21px;"><iframe loading="lazy" src="//player.vimeo.com/video/84256296?color=c9ff23" height="585" width="800" allowfullscreen="" frameborder="0"></iframe></p>
<p style="font-family: HelveticaNeue, Arial, 'Helvetica Neue', Helvetica, FreeSans, 'Liberation Sans', 'Nimbus Sans L', sans-serif; font-size: 14px; font-style: normal; font-variant: normal; line-height: 21px;"><strong>Old Line version.</strong> Slow but it seems to have better outcome with the random plotting points methods!!</p>
<p><iframe loading="lazy" src="//player.vimeo.com/video/84251593?color=c9ff23" height="585" width="800" allowfullscreen="" frameborder="0"></iframe></p>
<p>&nbsp;</p>
<p><strong>Image Gallery</strong></p>
<p><img loading="lazy" class="aligncenter size-full wp-image-701" alt="colorV20252" src="http://www.jhclaura.com/wp-content/uploads/2014/01/colorV20252.jpg" width="720" height="480" srcset="/wp-content/uploads/2014/01/colorV20252.jpg 720w, /wp-content/uploads/2014/01/colorV20252-300x200.jpg 300w" sizes="(max-width: 720px) 100vw, 720px" /><a href="http://www.jhclaura.com/wp-content/uploads/2014/01/line544.jpg"><img loading="lazy" class="aligncenter size-full wp-image-681" alt="line544" src="http://www.jhclaura.com/wp-content/uploads/2014/01/line544.jpg" width="720" height="480" srcset="/wp-content/uploads/2014/01/line544.jpg 720w, /wp-content/uploads/2014/01/line544-300x200.jpg 300w" sizes="(max-width: 720px) 100vw, 720px" /></a><a href="http://www.jhclaura.com/wp-content/uploads/2014/01/outcome06.jpg"><img loading="lazy" class="aligncenter size-large wp-image-696" alt="outcome06" src="http://www.jhclaura.com/wp-content/uploads/2014/01/outcome06.jpg" width="1000" height="336" srcset="/wp-content/uploads/2014/01/outcome06.jpg 1000w, /wp-content/uploads/2014/01/outcome06-300x101.jpg 300w" sizes="(max-width: 1000px) 100vw, 1000px" /></a> <a href="http://www.jhclaura.com/wp-content/uploads/2014/01/outcome01.jpg"><img loading="lazy" class="aligncenter size-full wp-image-691" alt="outcome01" src="http://www.jhclaura.com/wp-content/uploads/2014/01/outcome01.jpg" width="1000" height="500" srcset="/wp-content/uploads/2014/01/outcome01.jpg 1000w, /wp-content/uploads/2014/01/outcome01-300x150.jpg 300w" sizes="(max-width: 1000px) 100vw, 1000px" /></a> <a href="http://www.jhclaura.com/wp-content/uploads/2014/01/outcome04.jpg"><img loading="lazy" class="aligncenter size-large wp-image-694" alt="outcome04" src="http://www.jhclaura.com/wp-content/uploads/2014/01/outcome04.jpg" width="1000" height="751" srcset="/wp-content/uploads/2014/01/outcome04.jpg 1000w, /wp-content/uploads/2014/01/outcome04-300x225.jpg 300w" sizes="(max-width: 1000px) 100vw, 1000px" /></a> <a href="http://www.jhclaura.com/wp-content/uploads/2014/01/outcome02.jpg"><img loading="lazy" class="aligncenter size-full wp-image-692" alt="outcome02" src="http://www.jhclaura.com/wp-content/uploads/2014/01/outcome02.jpg" width="1000" height="340" srcset="/wp-content/uploads/2014/01/outcome02.jpg 1000w, /wp-content/uploads/2014/01/outcome02-300x102.jpg 300w" sizes="(max-width: 1000px) 100vw, 1000px" /></a> <a href="http://www.jhclaura.com/wp-content/uploads/2014/01/outcome03.jpg"><img loading="lazy" class="aligncenter size-full wp-image-693" alt="outcome03" src="http://www.jhclaura.com/wp-content/uploads/2014/01/outcome03.jpg" width="1000" height="751" srcset="/wp-content/uploads/2014/01/outcome03.jpg 1000w, /wp-content/uploads/2014/01/outcome03-300x225.jpg 300w" sizes="(max-width: 1000px) 100vw, 1000px" /></a> <a href="http://www.jhclaura.com/wp-content/uploads/2014/01/outcome05.jpg"><img loading="lazy" class="aligncenter size-full wp-image-695" alt="outcome05" src="http://www.jhclaura.com/wp-content/uploads/2014/01/outcome05.jpg" width="1000" height="336" srcset="/wp-content/uploads/2014/01/outcome05.jpg 1000w, /wp-content/uploads/2014/01/outcome05-300x101.jpg 300w" sizes="(max-width: 1000px) 100vw, 1000px" /></a> <a href="http://www.jhclaura.com/wp-content/uploads/2014/01/outcome07.jpg"><img loading="lazy" class="aligncenter size-full wp-image-697" alt="outcome07" src="http://www.jhclaura.com/wp-content/uploads/2014/01/outcome07.jpg" width="1000" height="284" srcset="/wp-content/uploads/2014/01/outcome07.jpg 1000w, /wp-content/uploads/2014/01/outcome07-300x85.jpg 300w" sizes="(max-width: 1000px) 100vw, 1000px" /></a></p>
<p>&nbsp;</p>
<p><strong>Basic idea of code</strong></p>
<ol>
<li>capture image from webcam and save as PImage <em>source</em></li>
<li>iterate through source, pick up every pixel, compare either <span style="text-decoration: underline;">a) colors</span> or <span style="text-decoration: underline;">b) brightness</span> difference(I found comparing by colors will be more accurate).</li>
<li>if the difference is bigger than certain threshold, plant a point in class <em>Voronoi. </em>Voronoi does all the calculation to transform points into triangles.</li>
<li>for each triangle gotten out from Voronoi, using getCentroid() to pickup the color to fill the triangle built up with beginShape(), endShape() and vertex().</li>
<li>wipe out Voronoi and build a new one every 10 frames to speed up the performance.</li>
</ol>
<p>&nbsp;</p>
<p><strong>References</strong></p>
<ul>
<li>from <a href="http://robbietilton.com/blog/?p=607" target="_blank">Robbie Tilton</a>. ITP alumnus! This is where my base came from! Clear description made me not afraid of trying the code out! From him, I got the idea of using Cols and Rows to boost up the performance, and plotting points for triangles with a random deviation of 5 pixels to make it look less grid-like(<span style="text-decoration: underline; color: #000000;"><span style="text-decoration: underline;">BUT randomness is not good for picking color, and it also slows down the performance</span></span>).</li>
<li><span style="font-size: 1em;">from </span><a style="font-size: 1em;" href="http://vormplus.be/blog/article/voronoi-paintings-with-toxiclibs" target="_blank">Jan Vantomme</a><span style="font-size: 1em;">. Very well documentation! From him, I learned the difference between getCentroid() and getSites(), and also learned that, since getCentroid() and getSites() don’t return the voronoi regions and points in same order, to fill the right color for right position it has to be looped to iterate through, picking and filling up the color at the same time.</span></li>
</ul>
<p>&nbsp;</p>
<p><strong>Inspiration &amp; Further</strong></p>
<ul>
<li>amazing <a href="http://www.fastcodesign.com/1672028/algorithmic-portraits-reimagine-faces-as-software#1" target="_blank">algorithmic portraits</a> by Diana Lange.</li>
<li>triangulation <a href="http://learn.postspectacular.com/hg/bezalel-2011-delaunayunwrap/" target="_blank">tools</a> done by <a href="http://www.flickr.com/photos/toxi/5639608667/in/set-72157626419717867" target="_blank">Bezalel workshop</a>, so complicated yet the outcomes are so gorgeous.</li>
<li><a href="http://hemesh.wblut.com/" target="_blank">hemesh</a> &#8211;&gt; being able to make 3D triangulation mesh(printable too)</li>
</ul>
<p>&nbsp;</p>
<p><strong>Code</strong>, as below: <span id="more-677"></span></p>
<pre class="brush: java; gutter: true">//references:
//http://www.processing.org/tutorials/pixels/
//http://robbietilton.com/blog/?p=607
//http://vormplus.be/blog/article/voronoi-paintings-with-toxiclibs

import toxi.geom.*;
import toxi.geom.mesh2d.*; 
import toxi.util.*;
import toxi.util.datatypes.*; 
import toxi.processing.*;
import processing.video.*;

Capture video;
float size = 10000;
Voronoi voronoi;
PImage source;

int pointDensity = 70;
int cols, rows;
int x, y;
int numPixels;
float colorThreshold = 30;

void setup() {
  size(640,480);
  //size(source.width, source.height);
  video = new Capture(this, width, height);
  video.start();

  //source = loadImage(&quot;test.png&quot;);
  source = createImage(640,480,RGB);
  smooth();

  cols = width/pointDensity;
  rows = height/pointDensity;
  numPixels = source.width * source.height;

  voronoi = new Voronoi(size);

}

void addPoint() {
  source.copy(video,0,0,640,480,0,0,640,480);
  source.updatePixels();

  for (x=1; x&lt;source.width; x+=cols) {
    for (y=1; y&lt;source.height; y+=rows) {       int loc = x + y*source.width;       color pix = source.pixels[loc];              int leftLoc = (x-1) + (y-1)*source.width;       color leftPix = source.pixels[leftLoc];              // compare ver: color       float r1 = red(pix); float g1 = green(pix); float b1 = blue(pix);       float r2 = red(leftPix); float g2 = green(leftPix); float b2 = blue(leftPix);       float diff = dist(r1,g1,b1,r2,g2,b2);              // compare ver: brightness //      float diff = abs(brightness(pix)-brightness(leftPix));       if (diff &gt; colorThreshold) {
//        voronoi.addPoint(new Vec2D(x+random(-2, 2), y+random(-2, 2)));
        voronoi.addPoint(new Vec2D(x, y));
      }
    }
  }
}  

void drawTriangle(){

  for (Triangle2D t : voronoi.getTriangles()) {
    color pix;

    // use Centroid&#039;s color
    Vec2D locVec = t.computeCentroid();
    int loc = (int)((locVec.x) + (locVec.y)*source.width);

    pix = source.pixels[constrain(loc,0,numPixels-1)];
//    stroke(pix,100);
    fill(pix);
//    noFill();
    noStroke();

    beginShape(TRIANGLES);
    stroke(pix);
//    strokeWeight(.1);
    vertex(t.a.x, t.a.y);
    vertex(t.b.x, t.b.y);
    vertex(t.c.x, t.c.y);
    endShape();    
  }
}

void draw() {
  background(255);
  video.read();
  //image(video,0,0);

  if(showImg) {
    image(source, 0, 0);
  } else {
    addPoint(); 
    drawTriangle();
  }

  fill(0);  
  rect(15,5,30,20);

  // show frame rate
  fill(255);
  text(int(frameRate), 20, 20);

  updatePixels();

  if (frameCount%10 == 0)
    voronoi = new Voronoi(size);

}

boolean showImg = false;
boolean saveImg = false;

void keyPressed() {
  if(key == &#039;i&#039;)
    showImg = !showImg;
}</pre>
]]></content:encoded>
					
					<wfw:commentRss>/2014/01/16/triangulation/feed/</wfw:commentRss>
			<slash:comments>2</slash:comments>
		
		
			</item>
		<item>
		<title>WShow_Glitchtchtchitch</title>
		<link>/2013/12/20/wshow_glitchtchtchitch/</link>
					<comments>/2013/12/20/wshow_glitchtchtchitch/#respond</comments>
		
		<dc:creator><![CDATA[jhclaura]]></dc:creator>
		<pubDate>Fri, 20 Dec 2013 16:59:14 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Fall 2013]]></category>
		<category><![CDATA[ICM_Processing]]></category>
		<category><![CDATA[processing]]></category>
		<category><![CDATA[show]]></category>
		<guid isPermaLink="false">http://www.jhclaura.com/?p=596</guid>

					<description><![CDATA[@ ITP Winter Show 2013. Category: Processing, pixels. Set-up: Webcam, Macbook pro, 9 sketches. Details: blog post. &#160; &#160;]]></description>
										<content:encoded><![CDATA[<p>@ ITP Winter Show 2013.</p>
<p>Category: Processing, pixels.</p>
<p>Set-up: Webcam, Macbook pro, 9 sketches.</p>
<p>Details: <a href="http://www.jhclaura.com/glitchtchtchitch/">blog post</a>.</p>
<p><a href="http://www.jhclaura.com/wp-content/uploads/2013/11/version_id.png"><img loading="lazy" class="alignnone size-large wp-image-612" alt="version_id" src="http://www.jhclaura.com/wp-content/uploads/2013/11/version_id-1024x469.png" width="1024" height="469" srcset="/wp-content/uploads/2013/11/version_id-1024x469.png 1024w, /wp-content/uploads/2013/11/version_id-300x138.png 300w, /wp-content/uploads/2013/11/version_id.png 1300w" sizes="(max-width: 1024px) 100vw, 1024px" /></a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>

<a href='/2013-12-15-15-26-59/'><img width="184" height="350" src="/wp-content/uploads/2013/12/2013-12-15-15.26.59.jpg" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/12/2013-12-15-15.26.59.jpg 683w, /wp-content/uploads/2013/12/2013-12-15-15.26.59-158x300.jpg 158w, /wp-content/uploads/2013/12/2013-12-15-15.26.59-538x1024.jpg 538w" sizes="(max-width: 184px) 100vw, 184px" /></a>
<a href='/glitchtchtchitch-2/'><img width="620" height="302" src="/wp-content/uploads/2013/12/glitchtchtchitch.jpeg" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/12/glitchtchtchitch.jpeg 2268w, /wp-content/uploads/2013/12/glitchtchtchitch-300x146.jpeg 300w, /wp-content/uploads/2013/12/glitchtchtchitch-1024x499.jpeg 1024w" sizes="(max-width: 620px) 100vw, 620px" /></a>
<a href='/2013-12-15-15-33-11/'><img width="620" height="350" src="/wp-content/uploads/2013/12/2013-12-15-15.33.11-1024x577.jpg" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/12/2013-12-15-15.33.11-1024x577.jpg 1024w, /wp-content/uploads/2013/12/2013-12-15-15.33.11-300x169.jpg 300w, /wp-content/uploads/2013/12/2013-12-15-15.33.11.jpg 1300w" sizes="(max-width: 620px) 100vw, 620px" /></a>
<a href='/2013-12-15-15-34-08/'><img width="195" height="350" src="/wp-content/uploads/2013/12/2013-12-15-15.34.08.jpg" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/12/2013-12-15-15.34.08.jpg 723w, /wp-content/uploads/2013/12/2013-12-15-15.34.08-167x300.jpg 167w, /wp-content/uploads/2013/12/2013-12-15-15.34.08-570x1024.jpg 570w" sizes="(max-width: 195px) 100vw, 195px" /></a>
<a href='/2013-12-15-15-40-06/'><img width="620" height="333" src="/wp-content/uploads/2013/12/2013-12-15-15.40.06.jpg" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/12/2013-12-15-15.40.06.jpg 1300w, /wp-content/uploads/2013/12/2013-12-15-15.40.06-300x161.jpg 300w, /wp-content/uploads/2013/12/2013-12-15-15.40.06-1024x550.jpg 1024w" sizes="(max-width: 620px) 100vw, 620px" /></a>
<a href='/2013-12-15-17-31-13/'><img width="204" height="350" src="/wp-content/uploads/2013/12/2013-12-15-17.31.13.jpg" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/12/2013-12-15-17.31.13.jpg 759w, /wp-content/uploads/2013/12/2013-12-15-17.31.13-175x300.jpg 175w, /wp-content/uploads/2013/12/2013-12-15-17.31.13-598x1024.jpg 598w" sizes="(max-width: 204px) 100vw, 204px" /></a>
<a href='/img_1145/'><img width="620" height="309" src="/wp-content/uploads/2013/12/IMG_1145.jpg" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/12/IMG_1145.jpg 1300w, /wp-content/uploads/2013/12/IMG_1145-300x150.jpg 300w, /wp-content/uploads/2013/12/IMG_1145-1024x510.jpg 1024w" sizes="(max-width: 620px) 100vw, 620px" /></a>
<a href='/img_1147/'><img width="620" height="333" src="/wp-content/uploads/2013/12/IMG_1147.jpg" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/12/IMG_1147.jpg 1300w, /wp-content/uploads/2013/12/IMG_1147-300x161.jpg 300w, /wp-content/uploads/2013/12/IMG_1147-1024x550.jpg 1024w" sizes="(max-width: 620px) 100vw, 620px" /></a>
<a href='/img_1152/'><img width="620" height="295" src="/wp-content/uploads/2013/12/IMG_1152.jpg" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/12/IMG_1152.jpg 1300w, /wp-content/uploads/2013/12/IMG_1152-300x143.jpg 300w, /wp-content/uploads/2013/12/IMG_1152-1024x487.jpg 1024w" sizes="(max-width: 620px) 100vw, 620px" /></a>
<a href='/img_1154/'><img width="620" height="284" src="/wp-content/uploads/2013/12/IMG_1154.jpg" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/12/IMG_1154.jpg 1300w, /wp-content/uploads/2013/12/IMG_1154-300x138.jpg 300w, /wp-content/uploads/2013/12/IMG_1154-1024x469.jpg 1024w" sizes="(max-width: 620px) 100vw, 620px" /></a>
<a href='/img_1173/'><img width="524" height="350" src="/wp-content/uploads/2013/12/IMG_1173.jpg" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/12/IMG_1173.jpg 1300w, /wp-content/uploads/2013/12/IMG_1173-300x200.jpg 300w, /wp-content/uploads/2013/12/IMG_1173-1024x684.jpg 1024w" sizes="(max-width: 524px) 100vw, 524px" /></a>
<a href='/img_1177/'><img width="620" height="266" src="/wp-content/uploads/2013/12/IMG_1177.jpg" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/12/IMG_1177.jpg 1300w, /wp-content/uploads/2013/12/IMG_1177-300x129.jpg 300w, /wp-content/uploads/2013/12/IMG_1177-1024x440.jpg 1024w" sizes="(max-width: 620px) 100vw, 620px" /></a>

]]></content:encoded>
					
					<wfw:commentRss>/2013/12/20/wshow_glitchtchtchitch/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>ICM_Glitchtchtchitch</title>
		<link>/2013/11/28/glitchtchtchitch/</link>
					<comments>/2013/11/28/glitchtchtchitch/#respond</comments>
		
		<dc:creator><![CDATA[jhclaura]]></dc:creator>
		<pubDate>Thu, 28 Nov 2013 17:21:32 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[ICM_Processing]]></category>
		<category><![CDATA[final]]></category>
		<category><![CDATA[ohyay]]></category>
		<category><![CDATA[presentation]]></category>
		<category><![CDATA[processing]]></category>
		<category><![CDATA[video]]></category>
		<guid isPermaLink="false">http://www.jhclaura.com/?p=470</guid>

					<description><![CDATA[ICM Final&#8211; Glitchtchtchitch. Manipulation and surveillance visualization. Featured in ITP Winter Show 2013(See all the pics!). Glitchtchtchitch is a live interactive installation showing multiple short-lived fault in a system. By bringing out the imperfection of technology with massive pixels manipulation, sound distortion, and multiple screens display, Glitchtchtchitch visualize the transient fault and the incapability of [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>ICM Final&#8211; <strong>Glitchtchtchitch</strong>.</p>
<blockquote><p>Manipulation and surveillance visualization.</p></blockquote>
<p>Featured in <a href="http://www.jhclaura.com/wshow_glitchtchtchitch/" target="_blank">ITP Winter Show 2013(See all the pics!)</a>.</p>
<p>Glitchtchtchitch is a live interactive installation showing multiple short-lived fault in a system. By bringing out the imperfection of technology with massive pixels manipulation, sound distortion, and multiple screens display, Glitchtchtchitch visualize the transient fault and the incapability of communication. Although mainly sending serious messages, with the effect of headless illusions, heads displacement, and delay, it leaves audience undergoing an experience without too much pressure.</p>
<p>Glitchtchtchitch is presented by running more than 10 Processing sketches at the same time, and using 2-3 projectors to increase the amount of screen, the variety, and increase the level of distortion.</p>
<p><iframe loading="lazy" src="//player.vimeo.com/video/80522589?color=c9ff23" width="700" height="383" frameborder="0" allowfullscreen="allowfullscreen"></iframe></p>
<p>&nbsp;</p>
<p>Main idea &#8211;&gt;  In order to cubify heads, instead of just altering pixels, I made an object &#8220;Cube&#8221; to get, restore, alter, and display the pixels of specific range. Also to achieve the headless effect, besides the library <a href="https://github.com/atduskgreg/opencv-processing" target="_blank">OpenCV</a>, I took a background image beforehand, and display its pixels within certain ranges, once detecting a face. <a href="http://bit.ly/Glitchtchtchitch" target="_blank">ALL THE SOURCE CODES</a></p>
<p>&nbsp;</p>

<a href='/20/'><img width="474" height="350" src="/wp-content/uploads/2013/11/20.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/20.png 613w, /wp-content/uploads/2013/11/20-300x222.png 300w" sizes="(max-width: 474px) 100vw, 474px" /></a>
<a href='/5/'><img width="479" height="350" src="/wp-content/uploads/2013/11/5.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/5.png 551w, /wp-content/uploads/2013/11/5-300x219.png 300w" sizes="(max-width: 479px) 100vw, 479px" /></a>
<a href='/2/'><img width="471" height="350" src="/wp-content/uploads/2013/11/2.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/2.png 557w, /wp-content/uploads/2013/11/2-300x223.png 300w" sizes="(max-width: 471px) 100vw, 471px" /></a>
<a href='/16/'><img width="483" height="350" src="/wp-content/uploads/2013/11/16.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/16.png 609w, /wp-content/uploads/2013/11/16-300x217.png 300w" sizes="(max-width: 483px) 100vw, 483px" /></a>
<a href='/14/'><img width="540" height="350" src="/wp-content/uploads/2013/11/14.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/14.png 557w, /wp-content/uploads/2013/11/14-300x194.png 300w" sizes="(max-width: 540px) 100vw, 540px" /></a>
<a href='/1/'><img width="466" height="350" src="/wp-content/uploads/2013/11/1.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/1.png 557w, /wp-content/uploads/2013/11/1-300x225.png 300w" sizes="(max-width: 466px) 100vw, 466px" /></a>
<a href='/17/'><img width="444" height="350" src="/wp-content/uploads/2013/11/17.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/17.png 578w, /wp-content/uploads/2013/11/17-300x237.png 300w" sizes="(max-width: 444px) 100vw, 444px" /></a>
<a href='/12/'><img width="474" height="350" src="/wp-content/uploads/2013/11/12.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/12.png 552w, /wp-content/uploads/2013/11/12-300x222.png 300w" sizes="(max-width: 474px) 100vw, 474px" /></a>
<a href='/9/'><img width="471" height="350" src="/wp-content/uploads/2013/11/9.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/9.png 549w, /wp-content/uploads/2013/11/9-300x223.png 300w" sizes="(max-width: 471px) 100vw, 471px" /></a>
<a href='/15/'><img width="477" height="350" src="/wp-content/uploads/2013/11/15.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/15.png 612w, /wp-content/uploads/2013/11/15-300x220.png 300w" sizes="(max-width: 477px) 100vw, 477px" /></a>
<a href='/13/'><img width="473" height="350" src="/wp-content/uploads/2013/11/13.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/13.png 546w, /wp-content/uploads/2013/11/13-300x222.png 300w" sizes="(max-width: 473px) 100vw, 473px" /></a>
<a href='/19/'><img width="475" height="350" src="/wp-content/uploads/2013/11/19.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/19.png 607w, /wp-content/uploads/2013/11/19-300x221.png 300w" sizes="(max-width: 475px) 100vw, 475px" /></a>
<a href='/18/'><img width="490" height="350" src="/wp-content/uploads/2013/11/18.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/18.png 620w, /wp-content/uploads/2013/11/18-300x214.png 300w" sizes="(max-width: 490px) 100vw, 490px" /></a>
<a href='/11/'><img width="493" height="350" src="/wp-content/uploads/2013/11/11.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/11.png 562w, /wp-content/uploads/2013/11/11-300x213.png 300w" sizes="(max-width: 493px) 100vw, 493px" /></a>
<a href='/3/'><img width="551" height="339" src="/wp-content/uploads/2013/11/3.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/3.png 551w, /wp-content/uploads/2013/11/3-300x185.png 300w" sizes="(max-width: 551px) 100vw, 551px" /></a>
<a href='/7/'><img width="468" height="350" src="/wp-content/uploads/2013/11/7.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/7.png 553w, /wp-content/uploads/2013/11/7-300x225.png 300w" sizes="(max-width: 468px) 100vw, 468px" /></a>
<a href='/4/'><img width="461" height="350" src="/wp-content/uploads/2013/11/4.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/4.png 552w, /wp-content/uploads/2013/11/4-300x228.png 300w" sizes="(max-width: 461px) 100vw, 461px" /></a>
<a href='/8/'><img width="469" height="350" src="/wp-content/uploads/2013/11/8.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/8.png 555w, /wp-content/uploads/2013/11/8-300x224.png 300w" sizes="(max-width: 469px) 100vw, 469px" /></a>
<a href='/6/'><img width="476" height="350" src="/wp-content/uploads/2013/11/6.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/6.png 573w, /wp-content/uploads/2013/11/6-300x220.png 300w" sizes="(max-width: 476px) 100vw, 476px" /></a>
<a href='/10/'><img width="620" height="295" src="/wp-content/uploads/2013/11/10.png" class="attachment-620x350 size-620x350" alt="" loading="lazy" srcset="/wp-content/uploads/2013/11/10.png 851w, /wp-content/uploads/2013/11/10-300x143.png 300w" sizes="(max-width: 620px) 100vw, 620px" /></a>

<p><strong>Notes</strong></p>
<ul>
<li>Speed issue has room for improvement.</li>
<li>Different scale presentation style(projectors included) looks nice.</li>
<li>From user test and presentation feedback, people love headless and delay effect the most. Because they’re the most bizarre, unrealistic, and uncommon visual impact.</li>
</ul>
<p><strong>Problems with solutions</strong></p>
<ul>
<li>OutOfBounds —&gt; constrain(xxx, 0, numPixels-1)</li>
<li>flip horizontal —&gt; video.width-fx-1</li>
<li>can’t cover image with pixels[ ] —&gt; solved by using pixels for both</li>
<li>improve the sketch speed —&gt; P2D, PFrame,</li>
<li>connect to webcam? PS eye? —&gt; camera list, example</li>
</ul>
<p><strong>References</strong></p>
<ul>
<li>scale PImage <span style="text-decoration: underline;">http://stackoverflow.com/questions/17705781/video-delay-buffer-in-processing-2-0</span></li>
<li>Minim noise <span style="text-decoration: underline;">http://code.compartmental.net/tools/minim/manual-noise/</span></li>
<li>hide menu <span style="text-decoration: underline;">http://processing.org/discourse/beta/num_1224367967.html</span></li>
</ul>
<p><strong>Original proposal </strong>&#8211;&gt; <a href="http://jhclaura.com/Glitchtchtchlitch_proposal/assets/player/KeynoteDHTMLPlayer.html#0" target="_blank">Here</a>.</p>
<p><a href="http://jhclaura.com/Glitchtchtchlitch_proposal/Glitchtchtchlitch_proposal.pdf">http://jhclaura.com/Glitchtchtchlitch_proposal/Glitchtchtchlitch_proposal.pdf</a></p>
]]></content:encoded>
					
					<wfw:commentRss>/2013/11/28/glitchtchtchitch/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>ICM_Glitchtchtchlitch_proposal</title>
		<link>/2013/11/12/icm_glitchtchtchlitch_proposal/</link>
					<comments>/2013/11/12/icm_glitchtchtchlitch_proposal/#respond</comments>
		
		<dc:creator><![CDATA[jhclaura]]></dc:creator>
		<pubDate>Tue, 12 Nov 2013 16:07:53 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[ICM_Processing]]></category>
		<category><![CDATA[brain-squeezing]]></category>
		<category><![CDATA[fantasy]]></category>
		<category><![CDATA[final]]></category>
		<category><![CDATA[presentation]]></category>
		<category><![CDATA[processing]]></category>
		<guid isPermaLink="false">http://www.jhclaura.com/?p=406</guid>

					<description><![CDATA[Let&#8217;s glitch!]]></description>
										<content:encoded><![CDATA[<p><strong><a href="http://jhclaura.com/Glitchtchtchlitch_proposal/index.html" target="_blank">Let&#8217;s glitch!</a></strong></p>
<p><a href="http://jhclaura.com/Glitchtchtchlitch_proposal/Glitchtchtchlitch_proposal.pdf">http://jhclaura.com/Glitchtchtchlitch_proposal/Glitchtchtchlitch_proposal.pdf</a></p>
]]></content:encoded>
					
					<wfw:commentRss>/2013/11/12/icm_glitchtchtchlitch_proposal/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>ICM_Love Letters from Beethoven</title>
		<link>/2013/11/05/icm_love-letters-from-beethoven/</link>
					<comments>/2013/11/05/icm_love-letters-from-beethoven/#respond</comments>
		
		<dc:creator><![CDATA[jhclaura]]></dc:creator>
		<pubDate>Tue, 05 Nov 2013 18:57:58 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[ICM_Processing]]></category>
		<category><![CDATA[brain-squeezing]]></category>
		<category><![CDATA[processing]]></category>
		<guid isPermaLink="false">http://www.jhclaura.com/?p=355</guid>

					<description><![CDATA[Data sources_immortal beloved letters from Beethoven. Sweet words are red and bigger and will enlarge the heart individually. Click to feel the passion and eagerness and probably a little bit desperation of Beethoven.]]></description>
										<content:encoded><![CDATA[<p style="text-align: center;"><img loading="lazy" class="aligncenter size-large wp-image-357" alt="Beethoven_love_letter" src="http://www.jhclaura.com/wp-content/uploads/2013/11/Beethoven_love_letter.png" width="500" height="354" srcset="/wp-content/uploads/2013/11/Beethoven_love_letter.png 594w, /wp-content/uploads/2013/11/Beethoven_love_letter-300x213.png 300w" sizes="(max-width: 500px) 100vw, 500px" /><a href="http://www.jhclaura.com/wp-content/uploads/2013/11/Beethoven_love_letter_bigger.png"><img loading="lazy" class="aligncenter  wp-image-356" alt="Beethoven_love_letter_bigger" src="http://www.jhclaura.com/wp-content/uploads/2013/11/Beethoven_love_letter_bigger.png" width="485" height="342" srcset="/wp-content/uploads/2013/11/Beethoven_love_letter_bigger.png 599w, /wp-content/uploads/2013/11/Beethoven_love_letter_bigger-300x211.png 300w" sizes="(max-width: 485px) 100vw, 485px" /></a></p>
<p>Data sources_<a href="http://home.swipnet.se/zabonk/cultur/ludwig/beeim.htm" target="_blank">immortal beloved letters</a> from Beethoven. Sweet words are red and bigger and will enlarge the heart individually.</p>
<p><a href="http://www.openprocessing.org/sketch/119243" target="_blank"><span style="color: #99cc00;"><strong>Click</strong></span></a> to feel the passion and eagerness and probably a little bit desperation of Beethoven.</p>
]]></content:encoded>
					
					<wfw:commentRss>/2013/11/05/icm_love-letters-from-beethoven/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>ICM_Video_Let&#8217;s have Fun!</title>
		<link>/2013/10/24/icm_video_lets-have-fun/</link>
					<comments>/2013/10/24/icm_video_lets-have-fun/#respond</comments>
		
		<dc:creator><![CDATA[jhclaura]]></dc:creator>
		<pubDate>Thu, 24 Oct 2013 06:41:02 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Fun]]></category>
		<category><![CDATA[Fungus Among Us]]></category>
		<category><![CDATA[ICM_Processing]]></category>
		<category><![CDATA[processing]]></category>
		<category><![CDATA[video]]></category>
		<guid isPermaLink="false">http://www.jhclaura.com/?p=306</guid>

					<description><![CDATA[OpenCV Library Just tweaking around Daniel Shiffman&#8217;s LiveFaceDetect example with OpenCV library. Photoshopped off the face of Mushroom. And I&#8217;m proud that I mapped the position and the scale well! So FIT hahaha. Below is my mushroom hat mapping code. if (faces != null) { for (int i = 0; i &#60; faces.length; i++) { [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>OpenCV Library</p>
<p><a href="http://www.jhclaura.com/wp-content/uploads/2013/10/OpenCV_mushroom.jpg"><img loading="lazy" class=" wp-image-309 alignnone" alt="OpenCV_mushroom" src="http://www.jhclaura.com/wp-content/uploads/2013/10/OpenCV_mushroom-1024x613.jpg" width="550" height="329" srcset="/wp-content/uploads/2013/10/OpenCV_mushroom-1024x613.jpg 1024w, /wp-content/uploads/2013/10/OpenCV_mushroom-300x180.jpg 300w" sizes="(max-width: 550px) 100vw, 550px" /></a></p>
<p><a href="http://www.jhclaura.com/wp-content/uploads/2013/10/Mushroom.png"><img loading="lazy" class=" wp-image-311 alignnone" alt="Mushroom" src="http://www.jhclaura.com/wp-content/uploads/2013/10/Mushroom.png" width="546" height="505" srcset="/wp-content/uploads/2013/10/Mushroom.png 607w, /wp-content/uploads/2013/10/Mushroom-300x277.png 300w" sizes="(max-width: 546px) 100vw, 546px" /></a></p>
<p>Just tweaking around Daniel Shiffman&#8217;s <a href="https://github.com/shiffman/Face-It/blob/master/OpenCV/LiveFaceDetect/LiveFaceDetect.pde" target="_blank">LiveFaceDetect</a> example with <a href="https://github.com/atduskgreg/opencv-processing/releases" target="_blank">OpenCV library</a>. Photoshopped off the face of Mushroom. And I&#8217;m proud that I mapped the position and the scale well! So FIT hahaha. Below is my mushroom hat mapping code.</p>
<pre class="brush: java; gutter: true">if (faces != null) {
    for (int i = 0; i &lt; faces.length; i++) {
      // image size: 500
      // maps image size with face scale
      float w = map(img.width, 200, 1, 1, faces[i].width);
      float h = map(img.height, 200, 1, 1, faces[i].height);

      image(img, faces[i].x+faces[i].width/2-(w)/2, faces[i].y-(h)/2, w, h);
    }
  }</pre>
<p>And here&#8217;s the video for it. Fun!<br />
<iframe loading="lazy" src="//www.youtube.com/embed/JLf_7t_6brk?rel=0" height="315" width="420" allowfullscreen="" frameborder="0"></iframe></p>
<p>&nbsp;</p>
]]></content:encoded>
					
					<wfw:commentRss>/2013/10/24/icm_video_lets-have-fun/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
