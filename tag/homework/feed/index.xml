<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>homework &#8211; ITP Days</title>
	<atom:link href="/tag/homework/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>Very cool days</description>
	<lastBuildDate>Mon, 28 Oct 2013 15:14:21 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.1</generator>

<image>
	<url>/wp-content/uploads/2015/09/cropped-hat-32x32.jpg</url>
	<title>homework &#8211; ITP Days</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Web_First Ever Html Yo</title>
		<link>/2013/10/28/web_firsteverhtmlyo/</link>
					<comments>/2013/10/28/web_firsteverhtmlyo/#respond</comments>
		
		<dc:creator><![CDATA[jhclaura]]></dc:creator>
		<pubDate>Mon, 28 Oct 2013 15:14:21 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[CommLab Web]]></category>
		<category><![CDATA[homework]]></category>
		<category><![CDATA[ohyay]]></category>
		<category><![CDATA[test]]></category>
		<guid isPermaLink="false">http://www.jhclaura.com/?p=313</guid>

					<description><![CDATA[i&#8217;m so basic. &#8211;&#62; still in progress, be patient ðŸ˜‰]]></description>
										<content:encoded><![CDATA[<p><strong><span style="color: #99cc00;"><span style="color: #ff3333;"><a href="http://jhclaura.com/web_01/first_html.html" target="_blank"><span style="color: #ff3333;">i&#8217;m so basic</span></a></span>. &#8211;&gt; still in progress, be patient <img src="https://s.w.org/images/core/emoji/13.1.0/72x72/1f609.png" alt="ðŸ˜‰" class="wp-smiley" style="height: 1em; max-height: 1em;" /></span></strong></p>
]]></content:encoded>
					
					<wfw:commentRss>/2013/10/28/web_firsteverhtmlyo/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>V&#038;S_4_Reading_In the Blink of An Eye</title>
		<link>/2013/10/11/vs_4_reading_in-the-blink-of-an-eye/</link>
					<comments>/2013/10/11/vs_4_reading_in-the-blink-of-an-eye/#respond</comments>
		
		<dc:creator><![CDATA[jhclaura]]></dc:creator>
		<pubDate>Fri, 11 Oct 2013 12:08:50 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Video and Sounds]]></category>
		<category><![CDATA[film]]></category>
		<category><![CDATA[homework]]></category>
		<category><![CDATA[reading]]></category>
		<guid isPermaLink="false">http://www.jhclaura.com/?p=259</guid>

					<description><![CDATA[First of all, as one-shot sceneÂ mentioned in the reading, here&#8217;s an one-shot scene I&#8217;d love to share, from movie Atonement by Joe Wright. I respect it more after filming by ourselves. After this project, I find editing is much more easier than filming actually. Just like cooking, without good and fresh materials, you can&#8217;t make [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>First of all, as one-shot sceneÂ mentioned in the reading, here&#8217;s an one-shot scene I&#8217;d love to share, from movie Atonement by Joe Wright. I respect it more after filming by ourselves.</p>
<p><iframe loading="lazy" src="//player.vimeo.com/video/37392284?color=c9ff23" height="281" width="500" allowfullscreen="" frameborder="0"></iframe></p>
<p><a href="http://vimeo.com/37392284"><span style="font-size: 1em; color: #444444;">After this project, I find editing is much more easier than filming actually. Just like cooking, without good and fresh materials, you can&#8217;t make a cuisine. It helps a lot if you have all the materials you want on hand, thus the things like &#8220;in the middle of cooking finding that you don&#8217;t have onions at all and you either have to deal with it or just stop cooking and walking out to buy one&#8221; won&#8217;t happen on you.</span></a></p>
<p>There&#8217;re two points I find relatively interesting in the reading.</p>
<ul>
<li>Like sleeping therapy, editor helps director to make description more clearly(when things donâ€™t go as what director originally think about, director will defend for it then thus become more aware of the theme/thoughts). It&#8217;s so true. We&#8217;re both the directors and editorsÂ in this class project, and when we started editing, we kind of rethought about the whole concept and became more aware of the shots we missed.</li>
<li>Filming and editing are like learning foreign language. You know it well enough but it&#8217;s always difficult to speak or even write it. Sometimes you just have to let it go and speak whatever come across your mind, or you&#8217;ll be framed by the grammars and then stuck. And this happens in filming/editing as well. A lot of things didn&#8217;t follow the script at all. Storyboard and script become a big concept to follow, and improvisation gradually dominates all. But I&#8217;m not sure if it&#8217;s a good thing, because it seems professional movies and animations follow the script strictly. Some of the final shots look exactly the same with storyboard. That&#8217;s probably because they spend a lot of time in the pre-production and sometimes it takes years, so they can make sure what they really want clearly and then be able to follow the script. And maybe it&#8217;s also related to the scale. It costs hugely so you don&#8217;t have space to waste, and it needs clear descriptions for a lot of staff to follow. And it makes me wonder, is it normal and good to improvise in small scale production? For either filming or editing?</li>
</ul>
<p>Below is my first editing work, and since it&#8217;s a fantasy told by reconstructing clips of movies, it&#8217;s relatively simpler than filming and editing at the same time.</p>
<p><iframe loading="lazy" src="//player.vimeo.com/video/56292160?byline=0&amp;portrait=0&amp;color=c9ff23" height="600" width="800" allowfullscreen="" frameborder="0"></iframe></p>
]]></content:encoded>
					
					<wfw:commentRss>/2013/10/11/vs_4_reading_in-the-blink-of-an-eye/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>ICM_3_RainMan &#038; Triangles</title>
		<link>/2013/09/23/icm_3_rainman-triangles/</link>
					<comments>/2013/09/23/icm_3_rainman-triangles/#respond</comments>
		
		<dc:creator><![CDATA[jhclaura]]></dc:creator>
		<pubDate>Tue, 24 Sep 2013 01:00:11 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[ICM_Processing]]></category>
		<category><![CDATA[brain-squeezing]]></category>
		<category><![CDATA[group]]></category>
		<category><![CDATA[homework]]></category>
		<category><![CDATA[processing]]></category>
		<guid isPermaLink="false">http://www.jhclaura.com/?p=165</guid>

					<description><![CDATA[Time flies and here I am sweet ICM homework #3. It&#8217;s a collaboration work by Karam and I, and basically we just used each other&#8217;s class and try to make some interaction! I got the triangle class from Karam and background idea from Gladys, and this work was inspired by readingÂ The Nature of Code of [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Time flies and here I am sweet ICM homework #3. It&#8217;s a collaboration work by <a href="http://www.byunnnn.com/" target="_blank">Karam</a> and I, and basically we just used each other&#8217;s class and try to make some interaction! I got the triangle class from Karam and background idea from <a href="http://www.bewarehandbag.com/kangaroo/category/itp/" target="_blank">Gladys</a>, and this work was inspired by readingÂ <a href="http://natureofcode.com/" target="_blank">The Nature of Code</a> of Daniel Shiffman. Just finished chapter 1.Â Super good/tough stuff!!</p>
<p><img loading="lazy" class="wp-image-167  alignnone" alt="" src="http://www.jhclaura.com/wp-content/uploads/2013/09/RainManTri.jpg" width="344" height="240" srcset="/wp-content/uploads/2013/09/RainManTri.jpg 596w, /wp-content/uploads/2013/09/RainManTri-300x210.jpg 300w" sizes="(max-width: 344px) 100vw, 344px" />Â  Â <a href="http://www.jhclaura.com/wp-content/uploads/2013/09/RainManTriSad.jpg"><img loading="lazy" class="wp-image-166  alignnone" alt="" src="http://www.jhclaura.com/wp-content/uploads/2013/09/RainManTriSad.jpg" width="344" height="240" srcset="/wp-content/uploads/2013/09/RainManTriSad.jpg 597w, /wp-content/uploads/2013/09/RainManTriSad-300x210.jpg 300w" sizes="(max-width: 344px) 100vw, 344px" /></a></p>
<p>Here&#8217;s my newÂ bornÂ <a href="http://www.openprocessing.org/sketch/111118" target="_blank">baby(click me click me)</a>!Â It&#8217;s about a person who loves being rained, just enjoys the feeling of being miserable.Â When rain stops, the smile stops and background went blue. You canÂ click your mouse and make this guy happy again.</p>
<p>For this, I wrote 5 classes&#8230; just couldn&#8217;t stop, and hit into wall sooo many time. I was like a small rooted tree in the corner of ITP floor on Monday. And here&#8217;s are some problems(all about using class in class) and answers(except the last one) from try-and-error process of myself.</p>
<ul>
<li dir="ltr">Where to put the moving code?
<ul>
<li dir="ltr">make sure you can control the position in the { } in which the leading moving codes(e.g. x++) settle</li>
</ul>
</li>
<li dir="ltr">If things moves in different way?
<ul>
<li dir="ltr">put moving codes separately in its own class</li>
</ul>
</li>
<li dir="ltr">Wants rains start from cloud
<ul>
<li dir="ltr">donâ€™t need to declare Cloud class in Rain class!! can use it directly(tearing)</li>
</ul>
</li>
<li dir="ltr"><span style="color: #ff0000;"><strong>How to make smile affected by rain????</strong></span></li>
</ul>
<p>Still can&#8217;t solve the last problem. I guess there must be something wrong about my rain drops. I use distance between each rain drop and the man&#8217;s head to write some condition codes. The rain dropsÂ may seem to be affected well by the man, but I bet it&#8217;s actually not what we think they are, and that&#8217;s why although I could affect rain drops with the man, I failed to affect the smile with the rain drops? Too complicated. So in the end, I compromised and made the man smile when it&#8217;s raining and sad when it&#8217;s not.</p>
<p>Maybe it&#8217;s time to book an office hour with Dan.</p>
<p>And as usual, below are my baby&#8217;s bloody organs(codes).</p>
<p><span id="more-165"></span></p>
<p><strong>Main</strong></p>
<pre class="brush: java; gutter: true">MainRain[] rains;
Cloud cloud;
SadPP pp;
Tri[] t;

int totalDrops = 0;
int totalTris = 0;

float ln = 30.0; //length of triangle sides
float dis = 50.0; //distance between triangles

void setup() {
  size(600,400);
  smooth();

  cloud = new Cloud();
  rains = new Rain[300];
  pp = new SadPP();
  t = new Tri[300];

}

void draw() {

  background(100);

  if(totalTris &lt; t.length) {
    t[totalTris] = new Tri(ln, dis);
    totalTris ++;
  }

  for (int i=0; i &lt; totalTris; i++) {
    t[i].pattern();
    t[i].show();
  }

  if(totalDrops &lt; rains.length) {
    rains[totalDrops] = new Rain();
    totalDrops ++;
    pp.happy = true;
  } else {
    pp.happy = false;
  }

  for (int i=0; i &lt; totalDrops; i++) {
    rains[i].update();
    rains[i].updateCloud();
    rains[i].show();

  }

  cloud.drawCloud();
  cloud.move();

  pp.update(mouseX, mouseY);
  pp.show();
  pp.facial();
}

void mousePressed() {
  totalDrops = 0;
}</pre>
<p><strong>Cloud</strong></p>
<pre class="brush: java; gutter: true">class Cloud{

  float x, y; // position
  float speed;
  float scaleC; // size # to scale
  color c; // color

  Cloud(float _x, float _y, float _speed, float _scaleC, color _c) {
    x = _x;
    y = _y;
    speed = _speed;
    c = _c;
    scaleC = random((_scaleC-0.05), (_scaleC+0.05));
  }

  Cloud() {
    x = width/2;
    y = 50;
    speed = 1;
    scaleC = 0.6;
    c = color(200);
  }

  // draw a cloud shape
  void drawCloud() {

    pushMatrix();
    pushStyle();

    translate(x,y);
    noStroke();
    fill(c);
    scale(scaleC);

    float xA=30, yA=-40;
    bezier(30+xA,20+yA,90+xA,5+yA,110+xA,100+yA,30+xA,75+yA);
    bezier(30+xA,75+yA,50+xA,110+yA,-10+xA,120+yA,-5+xA,80+yA);
    bezier(-5+xA,80+yA,-10+xA,120+yA,-80+xA,110+yA,-60+xA,80+yA);
    bezier(-60+xA,80+yA,-70+xA,110+yA,-100+xA,90+yA,-80+xA,80+yA);
    bezier(-80+xA,80+yA,-140+xA,100+yA,-160+xA,20+yA,-110+xA,30+yA);
    bezier(-110+xA,30+yA,-120+xA,10+yA,-100+xA,0+yA,-90+xA,20+yA);
    bezier(-90+xA,20+yA,-95+xA,0+yA,-60+xA,-30+yA,-40+xA,5+yA);
    bezier(-40+xA,5+yA,-35+xA,-30+yA,60+xA,-10+yA,30+xA,20+yA);

    //fill cloud with color
    beginShape();
    vertex(31+xA,19+yA);
    vertex(31+xA,76+yA);
    vertex(-5+xA,81+yA);
    vertex(-60+xA,81+yA);
    vertex(-80+xA,81+yA);
    vertex(-111+xA,29+yA);
    vertex(-91+xA,19+yA);
    vertex(-40+xA,4+yA);
    endShape(CLOSE);

    popStyle();
    popMatrix();
  }

  // make cloud moves right
  void move() {
    x += speed;
    if(x &lt; 90 || x &gt; width - 90) {
      speed *= -1;
    }
  }

  // make cloud moves up and down
  void drifting() {
    y += random(-0.5,0.5);
  }

}</pre>
<p><strong>Drop</strong></p>
<pre class="brush: java; gutter: true">class Drop{

  float x, y, w, h;

  Drop(float _x, float _y, float _w, float _h) {
    x = _x;
    y = _y;
    w = _w;
    h = _h;
  }

  void show() {

    pushStyle();
    smooth();
    noStroke();
    triangle(x, y-h, x+w/2, y, x-w/2, y);
    ellipse(x, y, w, w);
    popStyle();
  }

}</pre>
<p><strong>Rain</strong></p>
<pre class="brush: java; gutter: true">class Rain{

  PVector location;
  PVector velocity;
  PVector acceleration;
  PVector distance;

  Drop drop;

  float w, h;
  float topSpeed;
  color c;

  Rain() {

    location = new PVector(cloud.x + random(-40, 40), cloud.y + 20);
    velocity = new PVector(random(0.01), random(0.1));
    distance = new PVector(20, 20);

    w = 8;
    h = 10;
    topSpeed = 4;
    c = color(128, 226, 234);
  }

  void show() {

    smooth();
    pushStyle();

    noStroke();
    fill(c);
    drop = new Drop(location.x, location.y, w, h);
    drop.show();

    popStyle();
  }

  void update() {

    PVector mouse = new PVector(mouseX, mouseY-60);
    PVector dir = PVector.sub(mouse, location);

    acceleration = new PVector(0, 0.03);

    if (dir.mag() &lt; distance.mag()) {

      dir.normalize();
      dir.x *= random(-0.4);
      dir.y = 0;
      acceleration = dir;
    }

    velocity.add(acceleration);
    velocity.limit(topSpeed);
    location.add(velocity);    
  }

  void updateCloud() {

    PVector cloudPosition = new PVector(cloud.x, cloud.y);
    PVector dir = PVector.sub(cloudPosition, location);

    acceleration = new PVector(0, 0);

    dir.normalize();
    dir.y = 0;
    dir.x *= random(-0.01, 0.01);
    acceleration = dir;

    velocity.add(acceleration);
    location.add(velocity);
  }

  void checkFloor() {

    if (location.y &gt; height) {
      location.y = 0;
    } else if (location.y &lt; 0) {
      location.y = height;
    }

    if (location.x &gt; width) {
      location.x = 0;
    } else if (location.x &lt; 0) {
      location.x = width;
    }
  }

}</pre>
<p><strong>SadPeople</strong></p>
<pre class="brush: java; gutter: true">class SadPP{

  float x, y;
  Drop tear;
  boolean happy;

  SadPP() {
    x = 0;
    y = 0;
    tear = new Drop(x+5, y-10, 10, 5);
    happy = false;
  }

  void update(float _x, float _y) {
    x = _x;
    y = _y;
  }

  void show() {
    smooth();

    pushStyle();
    noStroke();
    fill(255);
    ellipse(x, y-40, 30, 30);
    rectMode(CENTER);
    rect(x, y, 25, 40);

    stroke(255);
    strokeWeight(8);
    line(x-8.8, y+18, pmouseX-8.8, pmouseY+48);
    line(x+8.4, y+18, pmouseX+8.4, pmouseY+48);
    popStyle();
  }

  void facial() {

    if (happy == true) {
      pushStyle();
      noFill();
      strokeWeight(1.5);
      stroke(255,0,0);
      beginShape();
      curveVertex(x-8.5, y-40);
      curveVertex(x-8.5, y-40);
      curveVertex(x-6, y-33);
      curveVertex(x, y-30);
      curveVertex(x+6, y-33);
      curveVertex(x+8.5, y-40);
      curveVertex(x+8.5, y-40);
      endShape();
      popStyle();
    } else if (happy == false) {
      pushStyle();
      stroke(0);
      beginShape();
      curveVertex(x-8.5, y-30);
      curveVertex(x-8.5, y-30);
      curveVertex(x-6, y-37);
      curveVertex(x, y-40);
      curveVertex(x+6, y-37);
      curveVertex(x+8.5, y-30);
      curveVertex(x+8.5, y-30);
      endShape();
      popStyle();
    }

  }
}</pre>
<p><strong>Triangle</strong></p>
<pre class="brush: java; gutter: true">class Tri {
  float x, y; //pattern starting point 
  float ln; //length of triangle sides
  float dis; //distance between triangles

  Tri(float _ln, float _dis) {
    //set starting point of pattern
    x = 0;
    y = 0;
    ln = _ln;
    dis = _dis;
  }

  void show() {

    pushStyle();
    noStroke();

    if (pp.happy == true) {
      fill(x+100, 0, y, 80);
    } else if (pp.happy == false) {
      fill(0, y, x+100, 80);
    }

    if (random(1) &gt; 0.52) {
      triangle(x, y+ln, x+ln/2, y, x+ln, y+ln);
    } 
    else {
      triangle(x, y, x+ln/2, y+ln, x+ln, y);
    }
    popStyle();

  }

  void pattern() {

    pushStyle();
    if (pp.happy == true) {
      x += dis;
      if (x &gt; width) {
        x = 0;
        y += ln;
      }
      if (y &gt;= height) {
        x = 0;
        y = 0;
      }
    } else {
      x -= dis;
      if (x &lt; 0) {
        x = width;
        y -= ln;
      }
      if (y &lt;= 0-ln) {
        x = width;
        y = height;
      }
    }
    popStyle();  
  }

}</pre>
]]></content:encoded>
					
					<wfw:commentRss>/2013/09/23/icm_3_rainman-triangles/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>ICM_02_CloudPaint</title>
		<link>/2013/09/19/icm_02_cloudpaint/</link>
					<comments>/2013/09/19/icm_02_cloudpaint/#comments</comments>
		
		<dc:creator><![CDATA[jhclaura]]></dc:creator>
		<pubDate>Thu, 19 Sep 2013 14:32:49 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[ICM_Processing]]></category>
		<category><![CDATA[group]]></category>
		<category><![CDATA[homework]]></category>
		<category><![CDATA[processing]]></category>
		<guid isPermaLink="false">http://www.jhclaura.com/?p=133</guid>

					<description><![CDATA[This is the idea of Caitlin and I, a self-made Paint software, for ICM week_02&#8217;s homework, making something animated and designed an UI. At first, we were ambitious and made a ideal Paint with multiple function, and even a fancy UI. BUT, it&#8217;s just too hard to accomplish ðŸ˜‰ Â Process of bloody stumbling is as [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>This is the idea of <a href="http://www.phasesofsputnik.com/blog/?p=50" target="_blank">Caitlin</a> and I, a self-made Paint software, for ICM week_02&#8217;s homework, making something animated and designed an UI. At first, we were ambitious and made a ideal Paint with multiple function, and even a fancy UI. BUT, it&#8217;s just too hard to accomplish <img src="https://s.w.org/images/core/emoji/13.1.0/72x72/1f609.png" alt="ðŸ˜‰" class="wp-smiley" style="height: 1em; max-height: 1em;" /> Â Process of bloody stumbling is as followed:</p>
<ol>
<li>made 3 floating cubes to choose colors from.</li>
<li>frustrated to find out that the color of every cube&#8217;s rim changed when I choose different stroke color.</li>
<li>same thing happened in stroke width.</li>
<li>P A N I C .</li>
<li>Struggling for hours.</li>
<li>thought object-orientation program might be the answer of this puzzle, so started learning OOP from scratch.</li>
<li>excited to have a workable class of drifting clouds.</li>
<li>frustrated to find out that problem still existed.</li>
<li>P A N I C .</li>
<li>Struggling for hours.</li>
<li>so desperate that I started googling my problem.</li>
<li>found out theÂ existence of pushStyle()/popStyle()!</li>
<li>had aÂ bitter(FXCK!)-yet-sweet(YAH!) moment for a while.</li>
<li>added stroke width, eraser, and new paper function to finish my mini-Paint.</li>
<li>L E A R N E D Â  Â A Â  Â L O T .</li>
</ol>
<p>And here&#8217;s my <a href="http://www.openprocessing.org/sketch/110528" target="_blank"><strong><span style="color: #ff0000;">bloody</span></strong> <strong><span style="color: #99cc00;">baby</span></strong></a>!(click me click me click me)</p>
<p>And below are my bloody baby&#8217;s organs(codes).</p>
<p><span id="more-133"></span></p>
<pre class="brush: java; gutter: true">class DriftC{
  float x, y, scaleC;
  color c;

  DriftC(float _x, float _y, float _scaleC, color _c) {
    x = _x;
    y = _y;
    c = _c;
    scaleC = random((_scaleC-0.05), (_scaleC+0.05));
  }

  void drawCloud() {
    drifting();
    render();
  }

  void drifting() {
    x ++;
    y += random(-0.5,0.5);

    if(x &amp;amp;gt; width + 90) {
      x = 0 - 90;
    }
  }

  void render() {
    cloud(x,y,scaleC,c);    
  }

  void cloud(float x, float y, float sz, color c) {
  //cloud made by bezier curves 
  //translate(120,145);
  //cloud&#039;s width=220, height=120
  pushMatrix();
  pushStyle();

  translate(x,y);
  noStroke();
  fill(c);
  scale(sz);

  float xA=30, yA=-40;
  bezier(30+xA,20+yA,90+xA,5+yA,110+xA,100+yA,30+xA,75+yA);
  bezier(30+xA,75+yA,50+xA,110+yA,-10+xA,120+yA,-5+xA,80+yA);
  bezier(-5+xA,80+yA,-10+xA,120+yA,-80+xA,110+yA,-60+xA,80+yA);
  bezier(-60+xA,80+yA,-70+xA,110+yA,-100+xA,90+yA,-80+xA,80+yA);
  bezier(-80+xA,80+yA,-140+xA,100+yA,-160+xA,20+yA,-110+xA,30+yA);
  bezier(-110+xA,30+yA,-120+xA,10+yA,-100+xA,0+yA,-90+xA,20+yA);
  bezier(-90+xA,20+yA,-95+xA,0+yA,-60+xA,-30+yA,-40+xA,5+yA);
  bezier(-40+xA,5+yA,-35+xA,-30+yA,60+xA,-10+yA,30+xA,20+yA);

  //fill cloud with color
  beginShape();
  vertex(31+xA,19+yA);
  vertex(31+xA,76+yA);
  vertex(-5+xA,81+yA);
  vertex(-60+xA,81+yA);
  vertex(-80+xA,81+yA);
  vertex(-111+xA,29+yA);
  vertex(-91+xA,19+yA);
  vertex(-40+xA,4+yA);
  endShape(CLOSE);

  popStyle();
  popMatrix();
  }

  float getX() {
    return x;
  }

  float getY() {
    return y;
  }

  color getC() {
    return c;
  }

  float getS() {
    return scaleC;
  }
}

//variables for Drifting Colors
color R = color(255,0,0);
color G = color(0,255,0);
color B = color(0,0,255);
color Y = color(255,240,0);
color GG = color(0,245,230);
color PN = color(255,77,163);
color PR = color(164,0,247);

float xRectR, xRectG, xRectB, xRectY, xRectGG, xRectPN, xRectPR;
float yRectR, yRectG, yRectB, yRectY, yRectGG, yRectPN, yRectPR;
float sizeRect;

//variables for StrokeWeight
float sw1, sw3, sw6, sw10;
float x1, x3, x6, x10, y, h;
float penX, penY, ppenX, ppenY;

//declare arrays for drifting colors
DriftC[] driftingColor = new DriftC[7];

void setup() {
  size(640,320);
  smooth();
  background(255);

  //for stroke
  sw1 = 1;
  sw3 = 3;
  sw6 = 6;
  sw10 = 10;
  x1 = 33;
  x3 = 43;
  x6 = 56;
  x10 = 73;
  y = 205;
  h = 70;

  pushStyle();
  fill(0);
  noStroke();
  rect(x1,y,sw1,h);
  rect(x3,y,sw3,h);
  rect(x6,y,sw6,h);
  rect(x10,y,sw10,h);
  popStyle();

  //for color
  xRectR = 30;
  xRectG = 170;
  xRectB = 270;
  xRectY = 350;
  xRectGG = 470;
  xRectPN = 600;
  xRectPR = 700;

  yRectR = 50;
  yRectG = 60;
  yRectB = 90;
  yRectY = 60;
  yRectGG = 75;
  yRectPN = 85;
  yRectPR = 65;
  sizeRect = 0.5;

  driftingColor[0] = new DriftC(xRectR, yRectR, sizeRect, R);
  driftingColor[1] = new DriftC(xRectG, yRectG, sizeRect, G);
  driftingColor[2] = new DriftC(xRectB, yRectB, sizeRect, B);
  driftingColor[3] = new DriftC(xRectY, yRectY, sizeRect, Y);
  driftingColor[4] = new DriftC(xRectGG, yRectGG, sizeRect, GG);
  driftingColor[5] = new DriftC(xRectPN, yRectPN, sizeRect, PN);
  driftingColor[6] = new DriftC(xRectPR, yRectPR, sizeRect, PR);
}

void draw() {

  //stroke &amp;amp;amp; newPaper
  pushStyle();
  //BG
  noStroke();
  fill(200);
  rect(0,160,120,160);
  rect(520,160,120,160);
  fill(255);
  rect(10,175,97,130);
  ellipse(580,250,70,70);
  //Bars
  fill(0);  
  rect(x1,y,sw1,h);
  rect(x3,y,sw3,h);
  rect(x6,y,sw6,h);
  rect(x10,y,sw10,h);
  popStyle();

  //color
  //BG
  pushStyle();
  noStroke();
  fill(200);
  rect(0,0,width,175);
  fill(255);
  rect(0,0,width,155);
  popStyle();
  //Drifting Colors
  for(int i=0; i&amp;amp;lt;driftingColor.length; i++) {
    driftingColor[i].drawCloud();
  }
}

void mousePressed() {
  //choose color from cloud
  for(int i=0; i&amp;amp;lt;driftingColor.length; i++) {
    if(mouseX&amp;amp;gt;(driftingColor[i].getX()-driftingColor[i].getS()*115) &amp;amp;amp;&amp;amp;amp; mouseX&amp;amp;lt;(driftingColor[i].getX()+driftingColor[i].getS()*115) &amp;amp;amp;&amp;amp;amp; 
        mouseY&amp;amp;gt;(driftingColor[i].getY()-driftingColor[i].getS()*65) &amp;amp;amp;&amp;amp;amp; mouseY&amp;amp;lt;(driftingColor[i].getY()+driftingColor[i].getS()*65)) {
      stroke(driftingColor[i].getC());
    }
  }

  //choose stroke width
  if(mouseX&amp;amp;gt;(x1-2) &amp;amp;amp;&amp;amp;amp; mouseX&amp;amp;lt;(x1+sw1+2) &amp;amp;amp;&amp;amp;amp; mouseY&amp;amp;gt;y &amp;amp;amp;&amp;amp;amp; mouseY&amp;amp;lt;(y+h)) {
    strokeWeight(1);
  }
  if(mouseX&amp;amp;gt;(x3-2) &amp;amp;amp;&amp;amp;amp; mouseX&amp;amp;lt;(x3+sw3+2) &amp;amp;amp;&amp;amp;amp; mouseY&amp;amp;gt;y &amp;amp;amp;&amp;amp;amp; mouseY&amp;amp;lt;(y+h)) {
    strokeWeight(3);
  }
  if(mouseX&amp;amp;gt;x6 &amp;amp;amp;&amp;amp;amp; mouseX&amp;amp;lt;(x6+sw6) &amp;amp;amp;&amp;amp;amp; mouseY&amp;amp;gt;y &amp;amp;amp;&amp;amp;amp; mouseY&amp;amp;lt;(y+h)) {
    strokeWeight(6);
  }
  if(mouseX&amp;amp;gt;x10 &amp;amp;amp;&amp;amp;amp; mouseX&amp;amp;lt;(x10+sw10) &amp;amp;amp;&amp;amp;amp; mouseY&amp;amp;gt;y &amp;amp;amp;&amp;amp;amp; mouseY&amp;amp;lt;(y+h)) {
    strokeWeight(10);
  }

  //make new paper
  if(mouseX&amp;amp;gt;545 &amp;amp;amp;&amp;amp;amp; mouseX&amp;amp;lt;615 &amp;amp;amp;&amp;amp;amp; mouseY&amp;amp;gt;215 &amp;amp;amp;&amp;amp;amp; mouseY&amp;amp;lt;285) {
    background(255);

    fill(0);
    noStroke();
    rect(x1,y,sw1,h);
    rect(x3,y,sw3,h);
    rect(x6,y,sw6,h);
    rect(x10,y,sw10,h);
  }
}

void mouseDragged() {
  line(pmouseX, pmouseY, mouseX, mouseY);
}

void keyPressed() {
  stroke(255);
}</pre>
]]></content:encoded>
					
					<wfw:commentRss>/2013/09/19/icm_02_cloudpaint/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>ICM_01_Sketch</title>
		<link>/2013/09/05/icm_01_sketch/</link>
					<comments>/2013/09/05/icm_01_sketch/#respond</comments>
		
		<dc:creator><![CDATA[jhclaura]]></dc:creator>
		<pubDate>Thu, 05 Sep 2013 20:19:41 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[ICM_Processing]]></category>
		<category><![CDATA[homework]]></category>
		<guid isPermaLink="false">http://www.jhclaura.com/?p=56</guid>

					<description><![CDATA[Hmmm&#8230; Finished homework for ICM week_1, and it&#8217;s a stoned spider. I wrote the most simple/straight-forward/dumb codes for this and I&#8217;m in the INTERMEDIATE class of Daniel Shiffman&#8230; Anyway, here&#8217;s the long-yet-not-complicated-at-all-source-code! //setting-up size(600,500); smooth(); background(255); //web_background stroke(180); for(int i=800; i&#62;0; i-=50) { for(int j=175; j&#60;600; j+=10) { ellipse(300,j,i,i); } } //shadow noStroke(); fill(180); ellipse(300,420,310,60); [&#8230;]]]></description>
										<content:encoded><![CDATA[<div id="attachment_57" style="width: 690px" class="wp-caption aligncenter"><a href="http://www.jhclaura.com/wp-content/uploads/2013/09/Picture-1.png"><img aria-describedby="caption-attachment-57" loading="lazy" class="size-full wp-image-57" alt="hyper_spider" src="http://www.jhclaura.com/wp-content/uploads/2013/09/Picture-1.png" width="680" height="602" srcset="/wp-content/uploads/2013/09/Picture-1.png 680w, /wp-content/uploads/2013/09/Picture-1-300x266.png 300w" sizes="(max-width: 680px) 100vw, 680px" /></a><p id="caption-attachment-57" class="wp-caption-text">hyper_spider</p></div>
<p>Hmmm&#8230; Finished homework for ICM week_1, and it&#8217;s a stoned spider. I wrote the most simple/straight-forward/dumb codes for this and I&#8217;m in the INTERMEDIATE class of Daniel Shiffman&#8230;</p>
<p>Anyway, here&#8217;s the long-yet-not-complicated-at-all-source-code!</p>
<p><span id="more-56"></span></p>
<pre class="brush: java; gutter: true">//setting-up

size(600,500);
smooth();
background(255);

//web_background
stroke(180);
for(int i=800; i&gt;0; i-=50) {
for(int j=175; j&lt;600; j+=10) {
ellipse(300,j,i,i);
}
}

//shadow
noStroke();
fill(180);
ellipse(300,420,310,60);
ellipse(300,370,500,90);

//teeth
noStroke();
fill(183,11,11);
triangle(260,390,260,440,280,390);
triangle(340,390,340,440,320,390);

//body
noStroke();
fill(252,246,41);
ellipse(300,250,350,300);

//legs_Left

stroke(0);
strokeWeight(2);
noFill();
beginShape();
curveVertex(140,300);
curveVertex(140,300);
curveVertex(110,250);
curveVertex(70,220);
curveVertex(50,350);
curveVertex(50,350);
endShape();

beginShape();
curveVertex(130,260);
curveVertex(130,260);
curveVertex(100,200);
curveVertex(70,210);
curveVertex(15,310);
curveVertex(15,310);
endShape();

beginShape();
curveVertex(130,240);
curveVertex(130,240);
curveVertex(80,190);
curveVertex(50,200);
curveVertex(35,300);
curveVertex(35,300);
endShape();

beginShape();
curveVertex(140,220);
curveVertex(140,220);
curveVertex(120,170);
curveVertex(90,140);
curveVertex(50,270);
curveVertex(50,270);
endShape();

//Right_legs
beginShape();
curveVertex(450,320);
curveVertex(450,320);
curveVertex(480,270);
curveVertex(520,240);
curveVertex(550,370);
curveVertex(550,370);
endShape();

beginShape();
curveVertex(460,290);
curveVertex(460,290);
curveVertex(490,240);
curveVertex(530,210);
curveVertex(580,320);
curveVertex(580,320);
endShape();

beginShape();
curveVertex(470,270);
curveVertex(470,270);
curveVertex(495,220);
curveVertex(530,200);
curveVertex(590,280);
curveVertex(590,280);
endShape();

beginShape();
curveVertex(470,230);
curveVertex(470,230);
curveVertex(490,175);
curveVertex(530,140);
curveVertex(560,300);
curveVertex(560,300);
endShape();

//mold
noStroke();
fill(0);
ellipse(335,380,10,10);

//hair on mold;
stroke(0);
strokeWeight(1);
line(335,380,338,370);
line(335,380,345,383);
line(335,380,343,375);

//eyes
noStroke();
fill(255);
ellipse(240,320,80,100);
ellipse(360,320,80,100);
fill(15,205,225);
ellipse(245,325,70,80);
ellipse(355,325,70,80);

//stars in eyes
fill(3,255,249);
stroke(108,255,251);
beginShape();
vertex(240,290);
vertex(220,350);
vertex(270,300);
vertex(215,320);
vertex(260,360);
vertex(240,290);
endShape();

beginShape();
vertex(360,290);
vertex(330,350);
vertex(390,330);
vertex(320,310);
vertex(370,355);
vertex(360,290);
endShape();

//green_dripping
noStroke();
fill(140,196,0);
beginShape();
curveVertex(100,0);
curveVertex(100,0);
curveVertex(120,70);
curveVertex(150,90);
curveVertex(180,45);
curveVertex(200,40);
curveVertex(210,120);
curveVertex(230,140);
curveVertex(260,60);
curveVertex(290,90);
curveVertex(310,80);
curveVertex(330,40);
curveVertex(350,110);
curveVertex(380,50);
curveVertex(390,40);
curveVertex(400,150);
curveVertex(430,160);
curveVertex(450,0);
curveVertex(450,0);
endShape();

beginShape();
curveVertex(470,0);
curveVertex(470,0);
curveVertex(480,40);
curveVertex(500,50);
curveVertex(520,0);
curveVertex(520,0);
endShape();

//End.</pre>
<p>&nbsp;</p>
]]></content:encoded>
					
					<wfw:commentRss>/2013/09/05/icm_01_sketch/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
